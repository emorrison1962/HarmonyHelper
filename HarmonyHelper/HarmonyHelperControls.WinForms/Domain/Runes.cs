using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HarmonyHelperControls.WinForms
{
    public class Runes02
    {
        public void foo()
        { 
        }
    }


    public static class Runes
    {
        static List<Rune> _Catalog = new List<Rune>();
        static public IEnumerable<Rune> Catalog { get { return _Catalog.AsEnumerable<Rune>(); } }
        static public readonly Rune Brace = new Rune(0xE000); // (and U+1D114)
        static public readonly Rune Reversed_brace = new Rune(0xE001);
        static public readonly Rune Bracket = new Rune(0xE002); // (and U+1D115)
        static public readonly Rune Bracket_top = new Rune(0xE003);
        static public readonly Rune Bracket_bottom = new Rune(0xE004);
        static public readonly Rune Reversed_bracket_top = new Rune(0xE005);
        static public readonly Rune Reversed_bracket_bottom = new Rune(0xE006);
        static public readonly Rune System_divider = new Rune(0xE007);
        static public readonly Rune Long_system_divider = new Rune(0xE008);
        static public readonly Rune Extra_long_system_divider = new Rune(0xE009);
        static public readonly Rune Split_bar_divider_bar_spans_a_system_break = new Rune(0xE00A);
        static public readonly Rune Staff_divide_arrow_down = new Rune(0xE00B);
        static public readonly Rune Staff_divide_arrow_up = new Rune(0xE00C);
        static public readonly Rune Staff_divide_arrows = new Rune(0xE00D);
        static public readonly Rune One_line_staff = new Rune(0xE010); // (and U+1D116)
        static public readonly Rune Two_line_staff = new Rune(0xE011); // (and U+1D117)
        static public readonly Rune Three_line_staff = new Rune(0xE012); // (and U+1D118)
        static public readonly Rune Four_line_staff = new Rune(0xE013); // (and U+1D119)
        static public readonly Rune Five_line_staff = new Rune(0xE014); // (and U+1D11A)
        static public readonly Rune Six_line_staff = new Rune(0xE015); // (and U+1D11B)
        static public readonly Rune One_line_staff_wide = new Rune(0xE016);
        static public readonly Rune Two_line_staff_wide = new Rune(0xE017);
        static public readonly Rune Three_line_staff_wide = new Rune(0xE018);
        static public readonly Rune Four_line_staff_wide = new Rune(0xE019);
        static public readonly Rune Five_line_staff_wide = new Rune(0xE01A);
        static public readonly Rune Six_line_staff_wide = new Rune(0xE01B);
        static public readonly Rune One_line_staff_narrow = new Rune(0xE01C);
        static public readonly Rune Two_line_staff_narrow = new Rune(0xE01D);
        static public readonly Rune Three_line_staff_narrow = new Rune(0xE01E);
        static public readonly Rune Four_line_staff_narrow = new Rune(0xE01F);
        static public readonly Rune Five_line_staff_narrow = new Rune(0xE020);
        static public readonly Rune Six_line_staff_narrow = new Rune(0xE021);
        static public readonly Rune Leger_line = new Rune(0xE022);
        static public readonly Rune Leger_line_wide = new Rune(0xE023);
        static public readonly Rune Leger_line_narrow = new Rune(0xE024);
        static public readonly Rune Single_barline = new Rune(0xE030); // (and U+1D100)
        static public readonly Rune Double_barline = new Rune(0xE031); // (and U+1D101)
        static public readonly Rune Final_barline = new Rune(0xE032); // (and U+1D102)
        static public readonly Rune Reverse_final_barline = new Rune(0xE033); // (and U+1D103)
        static public readonly Rune Heavy_barline = new Rune(0xE034);
        static public readonly Rune Heavy_double_barline = new Rune(0xE035);
        static public readonly Rune Dashed_barline = new Rune(0xE036); // (and U+1D104)
        static public readonly Rune Dotted_barline = new Rune(0xE037);
        static public readonly Rune Short_barline = new Rune(0xE038); // (and U+1D105)
        static public readonly Rune Tick_barline = new Rune(0xE039);
        static public readonly Rune Left_start_repeat_sign = new Rune(0xE040); // (and U+1D106)
        static public readonly Rune Right_end_repeat_sign = new Rune(0xE041); // (and U+1D107)
        static public readonly Rune Right_and_left_repeat_sign = new Rune(0xE042);
        static public readonly Rune Repeat_dots = new Rune(0xE043); // (and U+1D108)
        static public readonly Rune Single_repeat_dot = new Rune(0xE044);
        static public readonly Rune Dal_segno = new Rune(0xE045); // (and U+1D109)
        static public readonly Rune Da_capo = new Rune(0xE046); // (and U+1D10A)
        static public readonly Rune Segno = new Rune(0xE047); // (and U+1D10B)
        static public readonly Rune Coda = new Rune(0xE048); // (and U+1D10C)
        static public readonly Rune Square_coda = new Rune(0xE049);
        static public readonly Rune Segno_serpent = new Rune(0xE04A);
        static public readonly Rune Segno_serpent_with_vertical_lines = new Rune(0xE04B);
        static public readonly Rune Left_repeat_sign_within_bar = new Rune(0xE04C);
        static public readonly Rune Right_repeat_sign_within_bar = new Rune(0xE04D);
        static public readonly Rune G_clef = new Rune(0xE050); // (and U+1D11E)
        static public readonly Rune G_clef_quindicesima_bassa = new Rune(0xE051);
        static public readonly Rune G_clef_ottava_bassa = new Rune(0xE052); // (and U+1D120)
        static public readonly Rune G_clef_ottava_alta = new Rune(0xE053); // (and U+1D11F)
        static public readonly Rune G_clef_quindicesima_alta = new Rune(0xE054);
        static public readonly Rune G_clef_ottava_bassa_old_style = new Rune(0xE055);
        static public readonly Rune G_clef_ottava_bassa_with_C_clef = new Rune(0xE056);
        static public readonly Rune G_clef__optionally_ottava_bassa = new Rune(0xE057);
        static public readonly Rune Combining_G_clef__number_below = new Rune(0xE058);
        static public readonly Rune Combining_G_clef__number_above = new Rune(0xE059);
        static public readonly Rune G_clef__arrow_up = new Rune(0xE05A);
        static public readonly Rune G_clef__arrow_down = new Rune(0xE05B);
        static public readonly Rune C_clef = new Rune(0xE05C); // (and U+1D121)
        static public readonly Rune C_clef_ottava_bassa = new Rune(0xE05D);
        static public readonly Rune C_clef__arrow_up = new Rune(0xE05E);
        static public readonly Rune C_clef__arrow_down = new Rune(0xE05F);
        static public readonly Rune C_clef_OneNineth_century = new Rune(0xE060);
        static public readonly Rune Combining_C_clef = new Rune(0xE061);
        static public readonly Rune F_clef = new Rune(0xE062); // (and U+1D122)
        static public readonly Rune F_clef_quindicesima_bassa = new Rune(0xE063);
        static public readonly Rune F_clef_ottava_bassa = new Rune(0xE064); // (and U+1D124)
        static public readonly Rune F_clef_ottava_alta = new Rune(0xE065); // (and U+1D123)
        static public readonly Rune F_clef_quindicesima_alta = new Rune(0xE066);
        static public readonly Rune F_clef__arrow_up = new Rune(0xE067);
        static public readonly Rune F_clef__arrow_down = new Rune(0xE068);
        static public readonly Rune Unpitched_percussion_clef_One = new Rune(0xE069); // (and U+1D125)
        static public readonly Rune Unpitched_percussion_clef_Two = new Rune(0xE06A); // (and U+1D126)
        static public readonly Rune Semi_pitched_percussion_clef_One = new Rune(0xE06B);
        static public readonly Rune Semi_pitched_percussion_clef_Two = new Rune(0xE06C);
        static public readonly Rune Six_string_tab_clef = new Rune(0xE06D);
        static public readonly Rune Four_string_tab_clef = new Rune(0xE06E);
        static public readonly Rune Schäffer_clef = new Rune(0xE06F);
        static public readonly Rune Schäffer_previous_clef = new Rune(0xE070);
        static public readonly Rune Schäffer_G_clef_to_F_clef_change = new Rune(0xE071);
        static public readonly Rune Schäffer_F_clef_to_G_clef_change = new Rune(0xE072);
        static public readonly Rune Reversed_G_clef = new Rune(0xE073);
        static public readonly Rune Turned_G_clef = new Rune(0xE074);
        static public readonly Rune Reversed_C_clef = new Rune(0xE075);
        static public readonly Rune Reversed_F_clef = new Rune(0xE076);
        static public readonly Rune Turned_F_clef = new Rune(0xE077);
        static public readonly Rune Bridge_clef = new Rune(0xE078);
        static public readonly Rune Diatonic_accordion_clef = new Rune(0xE079);
        static public readonly Rune G_clef_change = new Rune(0xE07A);
        static public readonly Rune C_clef_change = new Rune(0xE07B);
        static public readonly Rune F_clef_change = new Rune(0xE07C);
        static public readonly Rune Eight_for_clefs = new Rune(0xE07D);
        static public readonly Rune OneFive_for_clefs = new Rune(0xE07E);
        static public readonly Rune Combining_clef_change = new Rune(0xE07F);
        static public readonly Rune Time_signature_0 = new Rune(0xE080);
        static public readonly Rune Time_signature_One = new Rune(0xE081);
        static public readonly Rune Time_signature_Two = new Rune(0xE082);
        static public readonly Rune Time_signature_Three = new Rune(0xE083);
        static public readonly Rune Time_signature_Four = new Rune(0xE084);
        static public readonly Rune Time_signature_Five = new Rune(0xE085);
        static public readonly Rune Time_signature_Six = new Rune(0xE086);
        static public readonly Rune Time_signature_Seven = new Rune(0xE087);
        static public readonly Rune Time_signature_Eight = new Rune(0xE088);
        static public readonly Rune Time_signature_Nine = new Rune(0xE089);
        static public readonly Rune Common_time = new Rune(0xE08A); // (and U+1D134)
        static public readonly Rune Cut_time = new Rune(0xE08B); // (and U+1D135)
        static public readonly Rune Time_signature__plus_ = new Rune(0xE08C);
        static public readonly Rune Time_signature__plus__for_numerators = new Rune(0xE08D);
        static public readonly Rune Time_signature_fraction_slash = new Rune(0xE08E);
        static public readonly Rune Time_signature_equals = new Rune(0xE08F);
        static public readonly Rune Time_signature_minus = new Rune(0xE090);
        static public readonly Rune Time_signature_multiply = new Rune(0xE091);
        static public readonly Rune Left_parenthesis_for_numerator_only = new Rune(0xE092);
        static public readonly Rune Right_parenthesis_for_numerator_only = new Rune(0xE093);
        static public readonly Rune Left_parenthesis_for_whole_time_signature = new Rune(0xE094);
        static public readonly Rune Right_parenthesis_for_whole_time_signature = new Rune(0xE095);
        static public readonly Rune Time_signature_comma = new Rune(0xE096);
        static public readonly Rune Time_signature_fraction__one_fourth = new Rune(0xE097);
        static public readonly Rune Time_signature_fraction__one_half = new Rune(0xE098);
        static public readonly Rune Time_signature_fraction__three_fourths = new Rune(0xE099);
        static public readonly Rune Time_signature_fraction__one_third = new Rune(0xE09A);
        static public readonly Rune Time_signature_fraction_two_thirds = new Rune(0xE09B);
        static public readonly Rune Open_time_signature = new Rune(0xE09C);
        static public readonly Rune Open_time_signature_Penderecki = new Rune(0xE09D);
        static public readonly Rune Control_character_for_numerator_digit = new Rune(0xE09E);
        static public readonly Rune Control_character_for_denominator_digit = new Rune(0xE09F);
        static public readonly Rune Double_whole_breve_notehead = new Rune(0xE0A0);
        static public readonly Rune Double_whole_breve_notehead_square = new Rune(0xE0A1);
        static public readonly Rune Whole_semibreve_notehead = new Rune(0xE0A2);
        static public readonly Rune Half_minim_notehead = new Rune(0xE0A3); // (and U+1D157)
        static public readonly Rune Black_notehead = new Rune(0xE0A4); // (and U+1D158)
        static public readonly Rune Null_notehead = new Rune(0xE0A5); // (and U+1D159)
        static public readonly Rune X_notehead_double_whole = new Rune(0xE0A6);
        static public readonly Rune X_notehead_whole = new Rune(0xE0A7);
        static public readonly Rune X_notehead_half = new Rune(0xE0A8);
        static public readonly Rune X_notehead_black = new Rune(0xE0A9); // (and U+1D143)
        static public readonly Rune Ornate_X_notehead = new Rune(0xE0AA);
        static public readonly Rune Ornate_X_notehead_in_ellipse = new Rune(0xE0AB);
        static public readonly Rune Plus_notehead_double_whole = new Rune(0xE0AC);
        static public readonly Rune Plus_notehead_whole = new Rune(0xE0AD);
        static public readonly Rune Plus_notehead_half = new Rune(0xE0AE);
        static public readonly Rune Plus_notehead_black = new Rune(0xE0AF); // (and U+1D144)
        static public readonly Rune Circle_X_double_whole = new Rune(0xE0B0);
        static public readonly Rune Circle_X_whole = new Rune(0xE0B1);
        static public readonly Rune Circle_X_half = new Rune(0xE0B2);
        static public readonly Rune Circle_X_notehead = new Rune(0xE0B3); // (and U+1D145)
        static public readonly Rune Double_whole_notehead_with_X = new Rune(0xE0B4);
        static public readonly Rune Whole_notehead_with_X = new Rune(0xE0B5);
        static public readonly Rune Half_notehead_with_X = new Rune(0xE0B6);
        static public readonly Rune Void_notehead_with_X = new Rune(0xE0B7);
        static public readonly Rune Square_notehead_white = new Rune(0xE0B8); // (and U+1D146)
        static public readonly Rune Square_notehead_black = new Rune(0xE0B9); // (and U+1D147)
        static public readonly Rune Triangle_notehead_up_double_whole = new Rune(0xE0BA);
        static public readonly Rune Triangle_notehead_up_whole = new Rune(0xE0BB);
        static public readonly Rune Triangle_notehead_up_half = new Rune(0xE0BC);
        static public readonly Rune Triangle_notehead_up_white = new Rune(0xE0BD); // (and U+1D148)
        static public readonly Rune Triangle_notehead_up_black = new Rune(0xE0BE); // (and U+1D149)
        static public readonly Rune Triangle_notehead_left_white = new Rune(0xE0BF); // (and U+1D14A)
        static public readonly Rune Triangle_notehead_left_black = new Rune(0xE0C0); // (and U+1D14B)
        static public readonly Rune Triangle_notehead_right_white = new Rune(0xE0C1); // (and U+1D14C)
        static public readonly Rune Triangle_notehead_right_black = new Rune(0xE0C2); // (and U+1D14D)
        static public readonly Rune Triangle_notehead_down_double_whole = new Rune(0xE0C3);
        static public readonly Rune Triangle_notehead_down_whole = new Rune(0xE0C4);
        static public readonly Rune Triangle_notehead_down_half = new Rune(0xE0C5);
        static public readonly Rune Triangle_notehead_down_white = new Rune(0xE0C6); // (and U+1D14E)
        static public readonly Rune Triangle_notehead_down_black = new Rune(0xE0C7); // (and U+1D14F)
        static public readonly Rune Triangle_notehead_up_right_white = new Rune(0xE0C8); // (and U+1D150)
        static public readonly Rune Triangle_notehead_up_right_black = new Rune(0xE0C9); // (and U+1D151)
        static public readonly Rune Moon_notehead_white = new Rune(0xE0CA); // (and U+1D152)
        static public readonly Rune Moon_notehead_black = new Rune(0xE0CB); // (and U+1D153)
        static public readonly Rune Triangle_round_notehead_down_white = new Rune(0xE0CC); // (and U+1D154)
        static public readonly Rune Triangle_round_notehead_down_black = new Rune(0xE0CD); // (and U+1D155)
        static public readonly Rune Parenthesis_notehead = new Rune(0xE0CE); // (and U+1D156)
        static public readonly Rune Slashed_black_notehead_bottom_left_to_top_right = new Rune(0xE0CF);
        static public readonly Rune Slashed_black_notehead_top_left_to_bottom_right = new Rune(0xE0D0);
        static public readonly Rune Slashed_half_notehead_bottom_left_to_top_right = new Rune(0xE0D1);
        static public readonly Rune Slashed_half_notehead_top_left_to_bottom_right = new Rune(0xE0D2);
        static public readonly Rune Slashed_whole_notehead_bottom_left_to_top_right = new Rune(0xE0D3);
        static public readonly Rune Slashed_whole_notehead_top_left_to_bottom_right = new Rune(0xE0D4);
        static public readonly Rune Slashed_double_whole_notehead_bottom_left_to_top_right = new Rune(0xE0D5);
        static public readonly Rune Slashed_double_whole_notehead_top_left_to_bottom_right = new Rune(0xE0D6);
        static public readonly Rune Diamond_double_whole_notehead = new Rune(0xE0D7);
        static public readonly Rune Diamond_whole_notehead = new Rune(0xE0D8);
        static public readonly Rune Diamond_half_notehead = new Rune(0xE0D9);
        static public readonly Rune Diamond_half_notehead_wide = new Rune(0xE0DA);
        static public readonly Rune Diamond_black_notehead = new Rune(0xE0DB);
        static public readonly Rune Diamond_black_notehead_wide = new Rune(0xE0DC);
        static public readonly Rune Diamond_white_notehead = new Rune(0xE0DD);
        static public readonly Rune Diamond_white_notehead_wide = new Rune(0xE0DE);
        static public readonly Rune Diamond_double_whole_notehead_old = new Rune(0xE0DF);
        static public readonly Rune Diamond_whole_notehead_old = new Rune(0xE0E0);
        static public readonly Rune Diamond_half_notehead_old = new Rune(0xE0E1);
        static public readonly Rune Diamond_black_notehead_old = new Rune(0xE0E2);
        static public readonly Rune Half_filled_diamond_notehead = new Rune(0xE0E3);
        static public readonly Rune Circled_black_notehead = new Rune(0xE0E4);
        static public readonly Rune Circled_half_notehead = new Rune(0xE0E5);
        static public readonly Rune Circled_whole_notehead = new Rune(0xE0E6);
        static public readonly Rune Circled_double_whole_notehead = new Rune(0xE0E7);
        static public readonly Rune Black_notehead_in_large_circle = new Rune(0xE0E8);
        static public readonly Rune Half_notehead_in_large_circle = new Rune(0xE0E9);
        static public readonly Rune Whole_notehead_in_large_circle = new Rune(0xE0EA);
        static public readonly Rune Double_whole_notehead_in_large_circle = new Rune(0xE0EB);
        static public readonly Rune Cross_notehead_in_large_circle = new Rune(0xE0EC);
        static public readonly Rune Large_arrow_up_highest_pitch_double_whole_notehead = new Rune(0xE0ED);
        static public readonly Rune Large_arrow_up_highest_pitch_whole_notehead = new Rune(0xE0EE);
        static public readonly Rune Large_arrow_up_highest_pitch_half_notehead = new Rune(0xE0EF);
        static public readonly Rune Large_arrow_up_highest_pitch_black_notehead = new Rune(0xE0F0);
        static public readonly Rune Large_arrow_down_lowest_pitch_double_whole_notehead = new Rune(0xE0F1);
        static public readonly Rune Large_arrow_down_lowest_pitch_whole_notehead = new Rune(0xE0F2);
        static public readonly Rune Large_arrow_down_lowest_pitch_half_notehead = new Rune(0xE0F3);
        static public readonly Rune Large_arrow_down_lowest_pitch_black_notehead = new Rune(0xE0F4);
        static public readonly Rune Opening_parenthesis = new Rune(0xE0F5);
        static public readonly Rune Closing_parenthesis = new Rune(0xE0F6);
        static public readonly Rune Circle_slash_notehead = new Rune(0xE0F7);
        static public readonly Rune Heavy_X_notehead = new Rune(0xE0F8);
        static public readonly Rune Heavy_X_with_hat_notehead = new Rune(0xE0F9);
        static public readonly Rune Filled_whole_semibreve_notehead = new Rune(0xE0FA);
        static public readonly Rune Filled_half_minim_notehead = new Rune(0xE0FB);
        static public readonly Rune Open_diamond_notehead = new Rune(0xE0FC);
        static public readonly Rune Slash_with_vertical_ends = new Rune(0xE100);
        static public readonly Rune Slash_with_horizontal_ends = new Rune(0xE101); // (and U+1D10D)
        static public readonly Rune White_slash_whole = new Rune(0xE102);
        static public readonly Rune White_slash_half = new Rune(0xE103);
        static public readonly Rune Large_white_diamond = new Rune(0xE104);
        static public readonly Rune Small_slash_with_vertical_ends = new Rune(0xE105);
        static public readonly Rune Large_X_notehead = new Rune(0xE106);
        static public readonly Rune Muted_slash_with_vertical_ends = new Rune(0xE107);
        static public readonly Rune Muted_slash_with_horizontal_ends = new Rune(0xE108);
        static public readonly Rune Muted_white_slash = new Rune(0xE109);
        static public readonly Rune White_slash_double_whole = new Rune(0xE10A);
        static public readonly Rune Large_round_black_notehead = new Rune(0xE110);
        static public readonly Rune Large_round_white_notehead = new Rune(0xE111);
        static public readonly Rune Large_round_white_notehead_with_dot = new Rune(0xE112);
        static public readonly Rune Round_black_notehead = new Rune(0xE113);
        static public readonly Rune Round_white_notehead = new Rune(0xE114);
        static public readonly Rune Round_white_notehead_with_dot = new Rune(0xE115);
        static public readonly Rune Large_round_black_notehead__slashed = new Rune(0xE116);
        static public readonly Rune Large_round_white_notehead__slashed = new Rune(0xE117);
        static public readonly Rune Round_black_notehead__slashed = new Rune(0xE118);
        static public readonly Rune Round_white_notehead__slashed = new Rune(0xE119);
        static public readonly Rune Large_square_black_notehead = new Rune(0xE11A);
        static public readonly Rune Large_square_white_notehead = new Rune(0xE11B);
        static public readonly Rune Round_black_notehead__double_slashed = new Rune(0xE11C);
        static public readonly Rune Round_white_notehead__double_slashed = new Rune(0xE11D);
        static public readonly Rune Cluster_notehead_white_square = new Rune(0xE120); // (and U+1D15A)
        static public readonly Rune Cluster_notehead_black_square = new Rune(0xE121); // (and U+1D15B)
        static public readonly Rune Cluster_notehead_white_round = new Rune(0xE122);
        static public readonly Rune Cluster_notehead_black_round = new Rune(0xE123);
        static public readonly Rune Double_whole_note_cluster__Twond = new Rune(0xE124);
        static public readonly Rune Whole_note_cluster__Twond = new Rune(0xE125);
        static public readonly Rune Half_note_cluster__Twond = new Rune(0xE126);
        static public readonly Rune Quarter_note_cluster__Twond = new Rune(0xE127);
        static public readonly Rune Double_whole_note_cluster__Threerd = new Rune(0xE128);
        static public readonly Rune Whole_note_cluster__Threerd = new Rune(0xE129);
        static public readonly Rune Half_note_cluster__Threerd = new Rune(0xE12A);
        static public readonly Rune Quarter_note_cluster__Threerd = new Rune(0xE12B);
        static public readonly Rune Combining_double_whole_note_cluster__top = new Rune(0xE12C);
        static public readonly Rune Combining_double_whole_note_cluster__middle = new Rune(0xE12D);
        static public readonly Rune Combining_double_whole_note_cluster__bottom = new Rune(0xE12E);
        static public readonly Rune Combining_whole_note_cluster__top = new Rune(0xE12F);
        static public readonly Rune Combining_whole_note_cluster__middle = new Rune(0xE130);
        static public readonly Rune Combining_whole_note_cluster__bottom = new Rune(0xE131);
        static public readonly Rune Combining_half_note_cluster__top = new Rune(0xE132);
        static public readonly Rune Combining_half_note_cluster__middle = new Rune(0xE133);
        static public readonly Rune Combining_half_note_cluster__bottom = new Rune(0xE134);
        static public readonly Rune Combining_quarter_note_cluster__top = new Rune(0xE135);
        static public readonly Rune Combining_quarter_note_cluster__middle = new Rune(0xE136);
        static public readonly Rune Combining_quarter_note_cluster__bottom = new Rune(0xE137);
        static public readonly Rune White_diamond_cluster__Twond = new Rune(0xE138);
        static public readonly Rune Black_diamond_cluster__Twond = new Rune(0xE139);
        static public readonly Rune White_diamond_cluster__Threerd = new Rune(0xE13A);
        static public readonly Rune Black_diamond_cluster__Threerd = new Rune(0xE13B);
        static public readonly Rune Combining_white_diamond_cluster__top = new Rune(0xE13C);
        static public readonly Rune Combining_white_diamond_cluster__middle = new Rune(0xE13D);
        static public readonly Rune Combining_white_diamond_cluster__bottom = new Rune(0xE13E);
        static public readonly Rune Combining_black_diamond_cluster__top = new Rune(0xE13F);
        static public readonly Rune Combining_black_diamond_cluster__middle = new Rune(0xE140);
        static public readonly Rune Combining_black_diamond_cluster__bottom = new Rune(0xE141);
        static public readonly Rune Combining_black_rectangular_cluster__top = new Rune(0xE142);
        static public readonly Rune Combining_black_rectangular_cluster__middle = new Rune(0xE143);
        static public readonly Rune Combining_black_rectangular_cluster__bottom = new Rune(0xE144);
        static public readonly Rune Combining_white_rectangular_cluster__top = new Rune(0xE145);
        static public readonly Rune Combining_white_rectangular_cluster__middle = new Rune(0xE146);
        static public readonly Rune Combining_white_rectangular_cluster__bottom = new Rune(0xE147);
        static public readonly Rune Do_whole_note = new Rune(0xE150);
        static public readonly Rune Re_whole_note = new Rune(0xE151);
        static public readonly Rune Mi_whole_note = new Rune(0xE152);
        static public readonly Rune Fa_whole_note = new Rune(0xE153);
        static public readonly Rune So_whole_note = new Rune(0xE154);
        static public readonly Rune La_whole_note = new Rune(0xE155);
        static public readonly Rune Ti_whole_note = new Rune(0xE156);
        static public readonly Rune Si_whole_note = new Rune(0xE157);
        static public readonly Rune Do_half_note = new Rune(0xE158);
        static public readonly Rune Re_half_note = new Rune(0xE159);
        static public readonly Rune Mi_half_note = new Rune(0xE15A);
        static public readonly Rune Fa_half_note = new Rune(0xE15B);
        static public readonly Rune So_half_note = new Rune(0xE15C);
        static public readonly Rune La_half_note = new Rune(0xE15D);
        static public readonly Rune Ti_half_note = new Rune(0xE15E);
        static public readonly Rune Si_half_note = new Rune(0xE15F);
        static public readonly Rune Do_black_note = new Rune(0xE160);
        static public readonly Rune Re_black_note = new Rune(0xE161);
        static public readonly Rune Mi_black_note = new Rune(0xE162);
        static public readonly Rune Fa_black_note = new Rune(0xE163);
        static public readonly Rune So_black_note = new Rune(0xE164);
        static public readonly Rune La_black_note = new Rune(0xE165);
        static public readonly Rune Ti_black_note = new Rune(0xE166);
        static public readonly Rune Si_black_note = new Rune(0xE167);
        static public readonly Rune A_flat_whole_note = new Rune(0xE168);
        static public readonly Rune A_whole_note = new Rune(0xE169);
        static public readonly Rune A_sharp_whole_note = new Rune(0xE16A);
        static public readonly Rune B_flat_whole_note = new Rune(0xE16B);
        static public readonly Rune B_whole_note = new Rune(0xE16C);
        static public readonly Rune B_sharp_whole_note = new Rune(0xE16D);
        static public readonly Rune C_flat_whole_note = new Rune(0xE16E);
        static public readonly Rune C_whole_note = new Rune(0xE16F);
        static public readonly Rune C_sharp_whole_note = new Rune(0xE170);
        static public readonly Rune D_flat_whole_note = new Rune(0xE171);
        static public readonly Rune D_whole_note = new Rune(0xE172);
        static public readonly Rune D_sharp_whole_note = new Rune(0xE173);
        static public readonly Rune E_flat_whole_note = new Rune(0xE174);
        static public readonly Rune E_whole_note = new Rune(0xE175);
        static public readonly Rune E_sharp_whole_note = new Rune(0xE176);
        static public readonly Rune F_flat_whole_note = new Rune(0xE177);
        static public readonly Rune F_whole_note = new Rune(0xE178);
        static public readonly Rune F_sharp_whole_note = new Rune(0xE179);
        static public readonly Rune G_flat_whole_note = new Rune(0xE17A);
        static public readonly Rune G_whole_note = new Rune(0xE17B);
        static public readonly Rune G_sharp_whole_note = new Rune(0xE17C);
        static public readonly Rune H_whole_note = new Rune(0xE17D);
        static public readonly Rune H_sharp_whole_note = new Rune(0xE17E);
        static public readonly Rune A_flat_half_note = new Rune(0xE17F);
        static public readonly Rune A_half_note = new Rune(0xE180);
        static public readonly Rune A_sharp_half_note = new Rune(0xE181);
        static public readonly Rune B_flat_half_note = new Rune(0xE182);
        static public readonly Rune B_half_note = new Rune(0xE183);
        static public readonly Rune B_sharp_half_note = new Rune(0xE184);
        static public readonly Rune C_flat_half_note = new Rune(0xE185);
        static public readonly Rune C_half_note = new Rune(0xE186);
        static public readonly Rune C_sharp_half_note = new Rune(0xE187);
        static public readonly Rune D_flat_half_note = new Rune(0xE188);
        static public readonly Rune D_half_note = new Rune(0xE189);
        static public readonly Rune D_sharp_half_note = new Rune(0xE18A);
        static public readonly Rune E_flat_half_note = new Rune(0xE18B);
        static public readonly Rune E_half_note = new Rune(0xE18C);
        static public readonly Rune E_sharp_half_note = new Rune(0xE18D);
        static public readonly Rune F_flat_half_note = new Rune(0xE18E);
        static public readonly Rune F_half_note = new Rune(0xE18F);
        static public readonly Rune F_sharp_half_note = new Rune(0xE190);
        static public readonly Rune G_flat_half_note = new Rune(0xE191);
        static public readonly Rune G_half_note = new Rune(0xE192);
        static public readonly Rune G_sharp_half_note = new Rune(0xE193);
        static public readonly Rune H_half_note = new Rune(0xE194);
        static public readonly Rune H_sharp_half_note = new Rune(0xE195);
        static public readonly Rune A_flat_black_note = new Rune(0xE196);
        static public readonly Rune A_black_note = new Rune(0xE197);
        static public readonly Rune A_sharp_black_note = new Rune(0xE198);
        static public readonly Rune B_flat_black_note = new Rune(0xE199);
        static public readonly Rune B_black_note = new Rune(0xE19A);
        static public readonly Rune B_sharp_black_note = new Rune(0xE19B);
        static public readonly Rune C_flat_black_note = new Rune(0xE19C);
        static public readonly Rune C_black_note = new Rune(0xE19D);
        static public readonly Rune C_sharp_black_note = new Rune(0xE19E);
        static public readonly Rune D_flat_black_note = new Rune(0xE19F);
        static public readonly Rune D_black_note = new Rune(0xE1A0);
        static public readonly Rune D_sharp_black_note = new Rune(0xE1A1);
        static public readonly Rune E_flat_black_note = new Rune(0xE1A2);
        static public readonly Rune E_black_note = new Rune(0xE1A3);
        static public readonly Rune E_sharp_black_note = new Rune(0xE1A4);
        static public readonly Rune F_flat_black_note = new Rune(0xE1A5);
        static public readonly Rune F_black_note = new Rune(0xE1A6);
        static public readonly Rune F_sharp_black_note = new Rune(0xE1A7);
        static public readonly Rune G_flat_black_note = new Rune(0xE1A8);
        static public readonly Rune G_black_note = new Rune(0xE1A9);
        static public readonly Rune G_sharp_black_note = new Rune(0xE1AA);
        static public readonly Rune H_black_note = new Rune(0xE1AB);
        static public readonly Rune H_sharp_black_note = new Rune(0xE1AC);
        static public readonly Rune Empty_whole_note = new Rune(0xE1AD);
        static public readonly Rune Empty_half_note = new Rune(0xE1AE);
        static public readonly Rune Empty_black_note = new Rune(0xE1AF);
        static public readonly Rune Round_white_Four_shape_sol__Seven_shape_so = new Rune(0xE1B0);
        static public readonly Rune Round_black_Four_shape_sol__Seven_shape_so = new Rune(0xE1B1);
        static public readonly Rune Square_white_Four_shape_la__Aikin_Seven_shape_la = new Rune(0xE1B2);
        static public readonly Rune Square_black_Four_shape_la__Aikin_Seven_shape_la = new Rune(0xE1B3);
        static public readonly Rune Triangle_right_white_stem_down__Four_shape_fa__Seven_shape_fa = new Rune(0xE1B4);
        static public readonly Rune Triangle_right_black_stem_down__Four_shape_fa__Seven_shape_fa = new Rune(0xE1B5);
        static public readonly Rune Triangle_left_white_stem_up__Four_shape_fa__Seven_shape_fa = new Rune(0xE1B6);
        static public readonly Rune Triangle_left_black_stem_up__Four_shape_fa__Seven_shape_fa = new Rune(0xE1B7);
        static public readonly Rune Diamond_white_Four_shape_mi__Seven_shape_mi = new Rune(0xE1B8);
        static public readonly Rune Diamond_black_Four_shape_mi__Seven_shape_mi = new Rune(0xE1B9);
        static public readonly Rune Triangle_up_white_Aikin_Seven_shape_do = new Rune(0xE1BA);
        static public readonly Rune Triangle_up_black_Aikin_Seven_shape_do = new Rune(0xE1BB);
        static public readonly Rune Moon_white_Aikin_Seven_shape_re = new Rune(0xE1BC);
        static public readonly Rune Moon_black_Aikin_Seven_shape_re = new Rune(0xE1BD);
        static public readonly Rune Triangle_round_white_Aikin_Seven_shape_ti = new Rune(0xE1BE);
        static public readonly Rune Triangle_round_black_Aikin_Seven_shape_ti = new Rune(0xE1BF);
        static public readonly Rune Inverted_keystone_white_Walker_Seven_shape_do = new Rune(0xE1C0);
        static public readonly Rune Inverted_keystone_black_Walker_Seven_shape_do = new Rune(0xE1C1);
        static public readonly Rune Quarter_moon_white_Walker_Seven_shape_re = new Rune(0xE1C2);
        static public readonly Rune Quarter_moon_black_Walker_Seven_shape_re = new Rune(0xE1C3);
        static public readonly Rune Isosceles_triangle_white_Walker_Seven_shape_ti = new Rune(0xE1C4);
        static public readonly Rune Isosceles_triangle_black_Walker_Seven_shape_ti = new Rune(0xE1C5);
        static public readonly Rune Moon_left_white_Funk_Seven_shape_do = new Rune(0xE1C6);
        static public readonly Rune Moon_left_black_Funk_Seven_shape_do = new Rune(0xE1C7);
        static public readonly Rune Arrowhead_left_white_Funk_Seven_shape_re = new Rune(0xE1C8);
        static public readonly Rune Arrowhead_left_black_Funk_Seven_shape_re = new Rune(0xE1C9);
        static public readonly Rune Triangle_round_left_white_Funk_Seven_shape_ti = new Rune(0xE1CA);
        static public readonly Rune Triangle_round_left_black_Funk_Seven_shape_ti = new Rune(0xE1CB);
        static public readonly Rune Double_whole_note_breve = new Rune(0xE1D0); // (and U+1D15C)
        static public readonly Rune Double_whole_note_square = new Rune(0xE1D1);
        static public readonly Rune Whole_note_semibreve = new Rune(0xE1D2); // (and U+1D15D)
        static public readonly Rune Half_note_minim_stem_up = new Rune(0xE1D3); // (and U+1D15E)
        static public readonly Rune Half_note_minim_stem_down = new Rune(0xE1D4);
        static public readonly Rune Quarter_note_crotchet_stem_up = new Rune(0xE1D5); // (and U+1D15F)
        static public readonly Rune Quarter_note_crotchet_stem_down = new Rune(0xE1D6);
        static public readonly Rune Eighth_note_quaver_stem_up = new Rune(0xE1D7); // (and U+1D160)
        static public readonly Rune Eighth_note_quaver_stem_down = new Rune(0xE1D8);
        static public readonly Rune OneSixth_note_semiquaver_stem_up = new Rune(0xE1D9); // (and U+1D161)
        static public readonly Rune OneSixth_note_semiquaver_stem_down = new Rune(0xE1DA);
        static public readonly Rune ThreeTwond_note_demisemiquaver_stem_up = new Rune(0xE1DB); // (and U+1D162)
        static public readonly Rune ThreeTwond_note_demisemiquaver_stem_down = new Rune(0xE1DC);
        static public readonly Rune SixFourth_note_hemidemisemiquaver_stem_up = new Rune(0xE1DD); // (and U+1D163)
        static public readonly Rune SixFourth_note_hemidemisemiquaver_stem_down = new Rune(0xE1DE);
        static public readonly Rune OneTwoEightth_note_semihemidemisemiquaver_stem_up = new Rune(0xE1DF); // (and U+1D164)
        static public readonly Rune OneTwoEightth_note_semihemidemisemiquaver_stem_down = new Rune(0xE1E0);
        static public readonly Rune TwoFiveSixth_note_demisemihemidemisemiquaver_stem_up = new Rune(0xE1E1);
        static public readonly Rune TwoFiveSixth_note_demisemihemidemisemiquaver_stem_down = new Rune(0xE1E2);
        static public readonly Rune FiveOneTwoth_note_hemidemisemihemidemisemiquaver_stem_up = new Rune(0xE1E3);
        static public readonly Rune FiveOneTwoth_note_hemidemisemihemidemisemiquaver_stem_down = new Rune(0xE1E4);
        static public readonly Rune One0TwoFourth_note_semihemidemisemihemidemisemiquaver_stem_up = new Rune(0xE1E5);
        static public readonly Rune One0TwoFourth_note_semihemidemisemihemidemisemiquaver_stem_down = new Rune(0xE1E6);
        static public readonly Rune Black_note__short_stem = new Rune(0xE1F0);
        static public readonly Rune Black_note__long_stem = new Rune(0xE1F1);
        static public readonly Rune Black_note__fractional_Eightth_beam__short_stem = new Rune(0xE1F2);
        static public readonly Rune Black_note__fractional_Eightth_beam__long_stem = new Rune(0xE1F3);
        static public readonly Rune Black_note__fractional_OneSixth_beam__short_stem = new Rune(0xE1F4);
        static public readonly Rune Black_note__fractional_OneSixth_beam__long_stem = new Rune(0xE1F5);
        static public readonly Rune Black_note__fractional_ThreeTwond_beam__long_stem = new Rune(0xE1F6);
        static public readonly Rune Continuing_Eightth_beam_for_short_stem = new Rune(0xE1F7);
        static public readonly Rune Continuing_Eightth_beam_for_long_stem = new Rune(0xE1F8);
        static public readonly Rune Continuing_OneSixth_beam_for_short_stem = new Rune(0xE1F9);
        static public readonly Rune Continuing_OneSixth_beam_for_long_stem = new Rune(0xE1FA);
        static public readonly Rune Continuing_ThreeTwond_beam_for_long_stem = new Rune(0xE1FB);
        static public readonly Rune Augmentation_dot = new Rune(0xE1FC);
        static public readonly Rune Tie = new Rune(0xE1FD);
        static public readonly Rune Tuplet_bracket_start_for_short_stem = new Rune(0xE1FE);
        static public readonly Rune Tuplet_number_Three_for_short_stem = new Rune(0xE1FF);
        static public readonly Rune Tuplet_bracket_end_for_short_stem = new Rune(0xE200);
        static public readonly Rune Tuplet_bracket_start_for_long_stem = new Rune(0xE201);
        static public readonly Rune Tuplet_number_Three_for_long_stem = new Rune(0xE202);
        static public readonly Rune Tuplet_bracket_end_for_long_stem = new Rune(0xE203);
        static public readonly Rune Headless_black_note__short_stem = new Rune(0xE204);
        static public readonly Rune Headless_black_note__long_stem = new Rune(0xE205);
        static public readonly Rune Headless_black_note__fractional_Eightth_beam__short_stem = new Rune(0xE206);
        static public readonly Rune Headless_black_note__fractional_Eightth_beam__long_stem = new Rune(0xE207);
        static public readonly Rune Headless_black_note__fractional_OneSixth_beam__short_stem = new Rune(0xE208);
        static public readonly Rune Headless_black_note__fractional_OneSixth_beam__long_stem = new Rune(0xE209);
        static public readonly Rune Headless_black_note__fractional_ThreeTwond_beam__long_stem = new Rune(0xE20A);
        static public readonly Rune Combining_stem = new Rune(0xE210); // (and U+1D165)
        static public readonly Rune Combining_sprechgesang_stem = new Rune(0xE211); // (and U+1D166)
        static public readonly Rune Combining_swished_stem = new Rune(0xE212);
        static public readonly Rune Combining_Penderecki_unmeasured_tremolo_stem = new Rune(0xE213);
        static public readonly Rune Combining_sul_ponticello_bow_behind_bridge_stem = new Rune(0xE214);
        static public readonly Rune Combining_bow_on_bridge_stem = new Rune(0xE215);
        static public readonly Rune Combining_bow_on_tailpiece_stem = new Rune(0xE216);
        static public readonly Rune Combining_buzz_roll_stem = new Rune(0xE217);
        static public readonly Rune Combining_damp_stem = new Rune(0xE218);
        static public readonly Rune Combining_vibrato_pulse_accent_Saunders_stem = new Rune(0xE219);
        static public readonly Rune Combining_multiphonics_black_stem = new Rune(0xE21A);
        static public readonly Rune Combining_multiphonics_white_stem = new Rune(0xE21B);
        static public readonly Rune Combining_multiphonics_black_and_white_stem = new Rune(0xE21C);
        static public readonly Rune Combining_sussurando_stem = new Rune(0xE21D);
        static public readonly Rune Combining_rim_shot_stem = new Rune(0xE21E);
        static public readonly Rune Combining_harp_string_noise_stem = new Rune(0xE21F);
        static public readonly Rune Combining_flag_One_Eightth_above = new Rune(0xE240); // (and U+1D16E)
        static public readonly Rune Combining_flag_One_Eightth_below = new Rune(0xE241);
        static public readonly Rune Combining_flag_Two_OneSixth_above = new Rune(0xE242); // (and U+1D16F)
        static public readonly Rune Combining_flag_Two_OneSixth_below = new Rune(0xE243);
        static public readonly Rune Combining_flag_Three_ThreeTwond_above = new Rune(0xE244); // (and U+1D170)
        static public readonly Rune Combining_flag_Three_ThreeTwond_below = new Rune(0xE245);
        static public readonly Rune Combining_flag_Four_SixFourth_above = new Rune(0xE246); // (and U+1D171)
        static public readonly Rune Combining_flag_Four_SixFourth_below = new Rune(0xE247);
        static public readonly Rune Combining_flag_Five_OneTwoEightth_above = new Rune(0xE248); // (and U+1D172)
        static public readonly Rune Combining_flag_Five_OneTwoEightth_below = new Rune(0xE249);
        static public readonly Rune Combining_flag_Six_TwoFiveSixth_above = new Rune(0xE24A);
        static public readonly Rune Combining_flag_Six_TwoFiveSixth_below = new Rune(0xE24B);
        static public readonly Rune Combining_flag_Seven_FiveOneTwoth_above = new Rune(0xE24C);
        static public readonly Rune Combining_flag_Seven_FiveOneTwoth_below = new Rune(0xE24D);
        static public readonly Rune Combining_flag_Eight_One0TwoFourth_above = new Rune(0xE24E);
        static public readonly Rune Combining_flag_Eight_One0TwoFourth_below = new Rune(0xE24F);
        static public readonly Rune Internal_combining_flag_above = new Rune(0xE250);
        static public readonly Rune Internal_combining_flag_below = new Rune(0xE251);
        static public readonly Rune Flat = new Rune(0xE260); // (and 266D)
        static public readonly Rune Natural = new Rune(0xE261); // (and 266E)
        static public readonly Rune Sharp = new Rune(0xE262); // (and 266F)
        static public readonly Rune Double_sharp = new Rune(0xE263); // (and U+1D12A)
        static public readonly Rune Double_flat = new Rune(0xE264); // (and U+1D12B)
        static public readonly Rune Triple_sharp = new Rune(0xE265);
        static public readonly Rune Triple_flat = new Rune(0xE266);
        static public readonly Rune Natural_flat = new Rune(0xE267);
        static public readonly Rune Natural_sharp = new Rune(0xE268);
        static public readonly Rune Sharp_sharp = new Rune(0xE269);
        static public readonly Rune Accidental_parenthesis__left = new Rune(0xE26A);
        static public readonly Rune Accidental_parenthesis__right = new Rune(0xE26B);
        static public readonly Rune Accidental_bracket__left = new Rune(0xE26C);
        static public readonly Rune Accidental_bracket__right = new Rune(0xE26D);
        static public readonly Rune Accent_above = new Rune(0xE4A0); // (and U+1D17B)
        static public readonly Rune Accent_below = new Rune(0xE4A1);
        static public readonly Rune Staccato_above = new Rune(0xE4A2); // (and U+1D17C)
        static public readonly Rune Staccato_below = new Rune(0xE4A3);
        static public readonly Rune Tenuto_above = new Rune(0xE4A4); // (and U+1D17D)
        static public readonly Rune Tenuto_below = new Rune(0xE4A5);
        static public readonly Rune Staccatissimo_above = new Rune(0xE4A6); // (and U+1D17E)
        static public readonly Rune Staccatissimo_below = new Rune(0xE4A7);
        static public readonly Rune Staccatissimo_wedge_above = new Rune(0xE4A8);
        static public readonly Rune Staccatissimo_wedge_below = new Rune(0xE4A9);
        static public readonly Rune Staccatissimo_stroke_above = new Rune(0xE4AA);
        static public readonly Rune Staccatissimo_stroke_below = new Rune(0xE4AB);
        static public readonly Rune Marcato_above = new Rune(0xE4AC); // (and U+1D17F)
        static public readonly Rune Marcato_below = new Rune(0xE4AD);
        static public readonly Rune Marcato_staccato_above = new Rune(0xE4AE); // (and U+1D180)
        static public readonly Rune Marcato_staccato_below = new Rune(0xE4AF);
        static public readonly Rune Accent_staccato_above = new Rune(0xE4B0); // (and U+1D181)
        static public readonly Rune Accent_staccato_below = new Rune(0xE4B1);
        static public readonly Rune Louré_tenuto_staccato_above = new Rune(0xE4B2); // (and U+1D182)
        static public readonly Rune Louré_tenuto_staccato_below = new Rune(0xE4B3);
        static public readonly Rune Tenuto_accent_above = new Rune(0xE4B4);
        static public readonly Rune Tenuto_accent_below = new Rune(0xE4B5);
        static public readonly Rune Stress_above = new Rune(0xE4B6);
        static public readonly Rune Stress_below = new Rune(0xE4B7);
        static public readonly Rune Unstress_above = new Rune(0xE4B8);
        static public readonly Rune Unstress_below = new Rune(0xE4B9);
        static public readonly Rune Laissez_vibrer_lv_above = new Rune(0xE4BA);
        static public readonly Rune Laissez_vibrer_lv_below = new Rune(0xE4BB);
        static public readonly Rune Marcato_tenuto_above = new Rune(0xE4BC);
        static public readonly Rune Marcato_tenuto_below = new Rune(0xE4BD);
        static public readonly Rune Fermata_above = new Rune(0xE4C0); // (and U+1D110)
        static public readonly Rune Fermata_below = new Rune(0xE4C1); // (and U+1D111)
        static public readonly Rune Very_short_fermata_above = new Rune(0xE4C2);
        static public readonly Rune Very_short_fermata_below = new Rune(0xE4C3);
        static public readonly Rune Short_fermata_above = new Rune(0xE4C4);
        static public readonly Rune Short_fermata_below = new Rune(0xE4C5);
        static public readonly Rune Long_fermata_above = new Rune(0xE4C6);
        static public readonly Rune Long_fermata_below = new Rune(0xE4C7);
        static public readonly Rune Very_long_fermata_above = new Rune(0xE4C8);
        static public readonly Rune Very_long_fermata_below = new Rune(0xE4C9);
        static public readonly Rune Long_fermata_Henze_above = new Rune(0xE4CA);
        static public readonly Rune Long_fermata_Henze_below = new Rune(0xE4CB);
        static public readonly Rune Short_fermata_Henze_above = new Rune(0xE4CC);
        static public readonly Rune Short_fermata_Henze_below = new Rune(0xE4CD);
        static public readonly Rune Breath_mark_comma = new Rune(0xE4CE); // (and U+1D112)
        static public readonly Rune Breath_mark_tick_like = new Rune(0xE4CF);
        static public readonly Rune Breath_mark_upbow_like = new Rune(0xE4D0);
        static public readonly Rune Caesura = new Rune(0xE4D1); // (and U+1D113)
        static public readonly Rune Thick_caesura = new Rune(0xE4D2);
        static public readonly Rune Short_caesura = new Rune(0xE4D3);
        static public readonly Rune Curved_caesura = new Rune(0xE4D4);
        static public readonly Rune Breath_mark_Salzedo = new Rune(0xE4D5);
        static public readonly Rune Curlew_Britten = new Rune(0xE4D6);
        static public readonly Rune Single_stroke_caesura = new Rune(0xE4D7);
        static public readonly Rune Maxima_rest = new Rune(0xE4E0);
        static public readonly Rune Longa_rest = new Rune(0xE4E1);
        static public readonly Rune Double_whole_breve_rest = new Rune(0xE4E2); // (and U+1D13A)
        static public readonly Rune Whole_semibreve_rest = new Rune(0xE4E3); // (and U+1D13B)
        static public readonly Rune Half_minim_rest = new Rune(0xE4E4); // (and U+1D13C)
        static public readonly Rune Quarter_crotchet_rest = new Rune(0xE4E5); // (and U+1D13D)
        static public readonly Rune Eighth_quaver_rest = new Rune(0xE4E6); // (and U+1D13E)
        static public readonly Rune OneSixth_semiquaver_rest = new Rune(0xE4E7); // (and U+1D13F)
        static public readonly Rune ThreeTwond_demisemiquaver_rest = new Rune(0xE4E8); // (and U+1D140)
        static public readonly Rune SixFourth_hemidemisemiquaver_rest = new Rune(0xE4E9); // (and U+1D141)
        static public readonly Rune OneTwoEightth_semihemidemisemiquaver_rest = new Rune(0xE4EA); // (and U+1D142)
        static public readonly Rune TwoFiveSixth_rest = new Rune(0xE4EB);
        static public readonly Rune FiveOneTwoth_rest = new Rune(0xE4EC);
        static public readonly Rune One0TwoFourth_rest = new Rune(0xE4ED);
        static public readonly Rune Multiple_measure_rest = new Rune(0xE4EE); // (and U+1D129)
        static public readonly Rune H_bar__left_half = new Rune(0xE4EF);
        static public readonly Rune H_bar__middle = new Rune(0xE4F0);
        static public readonly Rune H_bar__right_half = new Rune(0xE4F1);
        static public readonly Rune Old_style_quarter_crotchet_rest = new Rune(0xE4F2);
        static public readonly Rune Double_whole_rest_on_leger_lines = new Rune(0xE4F3);
        static public readonly Rune Whole_rest_on_leger_line = new Rune(0xE4F4);
        static public readonly Rune Half_rest_on_leger_line = new Rune(0xE4F5);
        static public readonly Rune Z_style_quarter_crotchet_rest = new Rune(0xE4F6);
        static public readonly Rune Repeat_last_bar = new Rune(0xE500); // (and U+1D10E)
        static public readonly Rune Repeat_last_two_bars = new Rune(0xE501); // (and U+1D10F)
        static public readonly Rune Repeat_last_four_bars = new Rune(0xE502);
        static public readonly Rune Repeat_bar_upper_dot = new Rune(0xE503);
        static public readonly Rune Repeat_bar_slash = new Rune(0xE504);
        static public readonly Rune Repeat_bar_lower_dot = new Rune(0xE505);
        static public readonly Rune Ottava = new Rune(0xE510);
        static public readonly Rune Ottava_alta = new Rune(0xE511); // (and U+1D136)
        static public readonly Rune Ottava_bassa = new Rune(0xE512); // (and U+1D137)
        static public readonly Rune Ottava_bassa_ba = new Rune(0xE513);
        static public readonly Rune Quindicesima = new Rune(0xE514);
        static public readonly Rune Quindicesima_alta = new Rune(0xE515);
        static public readonly Rune Quindicesima_bassa = new Rune(0xE516); // (and U+1D139)
        static public readonly Rune Ventiduesima = new Rune(0xE517);
        static public readonly Rune Ventiduesima_alta = new Rune(0xE518);
        static public readonly Rune Ventiduesima_bassa = new Rune(0xE519);
        static public readonly Rune Left_parenthesis_for_octave_signs = new Rune(0xE51A);
        static public readonly Rune Right_parenthesis_for_octave_signs = new Rune(0xE51B);
        static public readonly Rune Ottava_bassa_Eightvb = new Rune(0xE51C);
        static public readonly Rune Quindicesima_bassa_mb = new Rune(0xE51D);
        static public readonly Rune Ventiduesima_bassa_mb = new Rune(0xE51E);
        static public readonly Rune Bassa = new Rune(0xE51F);
        static public readonly Rune Piano = new Rune(0xE520); // (and U+1D18F)
        static public readonly Rune Mezzo = new Rune(0xE521); // (and U+1D190)
        static public readonly Rune Forte = new Rune(0xE522); // (and U+1D191)
        static public readonly Rune Rinforzando = new Rune(0xE523); // (and U+1D18C)
        static public readonly Rune Sforzando = new Rune(0xE524); // (and U+1D18D)
        static public readonly Rune Z = new Rune(0xE525); // (and U+1D18E)
        static public readonly Rune Niente = new Rune(0xE526);
        static public readonly Rune pppppp = new Rune(0xE527);
        static public readonly Rune ppppp = new Rune(0xE528);
        static public readonly Rune pppp = new Rune(0xE529);
        static public readonly Rune ppp = new Rune(0xE52A);
        static public readonly Rune pp = new Rune(0xE52B);
        static public readonly Rune mp = new Rune(0xE52C);
        static public readonly Rune mf = new Rune(0xE52D);
        static public readonly Rune pf = new Rune(0xE52E);
        static public readonly Rune ff = new Rune(0xE52F);
        static public readonly Rune fff = new Rune(0xE530);
        static public readonly Rune ffff = new Rune(0xE531);
        static public readonly Rune fffff = new Rune(0xE532);
        static public readonly Rune ffffff = new Rune(0xE533);
        static public readonly Rune Forte_piano = new Rune(0xE534);
        static public readonly Rune Forzando = new Rune(0xE535);
        static public readonly Rune Sforzando_One = new Rune(0xE536);
        static public readonly Rune Sforzando_piano = new Rune(0xE537);
        static public readonly Rune Sforzando_pianissimo = new Rune(0xE538);
        static public readonly Rune Sforzato = new Rune(0xE539);
        static public readonly Rune Sforzato_piano = new Rune(0xE53A);
        static public readonly Rune Sforzatissimo = new Rune(0xE53B);
        static public readonly Rune Rinforzando_One = new Rune(0xE53C);
        static public readonly Rune Rinforzando_Two = new Rune(0xE53D);
        static public readonly Rune Crescendo = new Rune(0xE53E); // (and U+1D192)
        static public readonly Rune Diminuendo = new Rune(0xE53F); // (and U+1D193)
        static public readonly Rune Messa_di_voce = new Rune(0xE540);
        static public readonly Rune Niente_for_hairpins = new Rune(0xE541);
        static public readonly Rune Left_parenthesis_for_hairpins = new Rune(0xE542);
        static public readonly Rune Right_parenthesis_for_hairpins = new Rune(0xE543);
        static public readonly Rune Left_bracket_for_hairpins = new Rune(0xE544);
        static public readonly Rune Right_bracket_for_hairpins = new Rune(0xE545);
        static public readonly Rune Colon_separator_for_combined_dynamics = new Rune(0xE546);
        static public readonly Rune Hyphen_separator_for_combined_dynamics = new Rune(0xE547);
        static public readonly Rune Space_separator_for_combined_dynamics = new Rune(0xE548);
        static public readonly Rune Slash_separator_for_combined_dynamics = new Rune(0xE549);
        static public readonly Rune Narrow_elision = new Rune(0xE550);
        static public readonly Rune Elision = new Rune(0xE551);
        static public readonly Rune Wide_elision = new Rune(0xE552);
        static public readonly Rune Baseline_hyphen = new Rune(0xE553);
        static public readonly Rune Non_breaking_baseline_hyphen = new Rune(0xE554);
        static public readonly Rune Text_repeats = new Rune(0xE555);
        static public readonly Rune Slashed_grace_note_stem_up = new Rune(0xE560); // (and U+1D194)
        static public readonly Rune Slashed_grace_note_stem_down = new Rune(0xE561);
        static public readonly Rune Grace_note_stem_up = new Rune(0xE562); // (and U+1D195)
        static public readonly Rune Grace_note_stem_down = new Rune(0xE563);
        static public readonly Rune Slash_for_stem_up_grace_note = new Rune(0xE564);
        static public readonly Rune Slash_for_stem_down_grace_note = new Rune(0xE565);
        static public readonly Rune Trill = new Rune(0xE566); // (and U+1D196)
        static public readonly Rune Turn = new Rune(0xE567); // (and U+1D197)
        static public readonly Rune Inverted_turn = new Rune(0xE568); // (and U+1D198)
        static public readonly Rune Turn_with_slash = new Rune(0xE569); // (and U+1D199)
        static public readonly Rune Turn_up = new Rune(0xE56A); // (and U+1D19A)
        static public readonly Rune Inverted_turn_up = new Rune(0xE56B);
        static public readonly Rune Short_trill = new Rune(0xE56C);
        static public readonly Rune Mordent = new Rune(0xE56D);
        static public readonly Rune Tremblement = new Rune(0xE56E);
        static public readonly Rune Haydn_ornament = new Rune(0xE56F);
        static public readonly Rune Guitar_vibrato_bar_scoop = new Rune(0xE830);
        static public readonly Rune Guitar_vibrato_bar_dip = new Rune(0xE831);
        static public readonly Rune Guitar_shake = new Rune(0xE832);
        static public readonly Rune String_number_0 = new Rune(0xE833);
        static public readonly Rune String_number_One = new Rune(0xE834);
        static public readonly Rune String_number_Two = new Rune(0xE835);
        static public readonly Rune String_number_Three = new Rune(0xE836);
        static public readonly Rune String_number_Four = new Rune(0xE837);
        static public readonly Rune String_number_Five = new Rune(0xE838);
        static public readonly Rune String_number_Six = new Rune(0xE839);
        static public readonly Rune String_number_Seven = new Rune(0xE83A);
        static public readonly Rune String_number_Eight = new Rune(0xE83B);
        static public readonly Rune String_number_Nine = new Rune(0xE83C);
        static public readonly Rune Open_wah_volume_pedal = new Rune(0xE83D);
        static public readonly Rune Half_open_wah_volume_pedal = new Rune(0xE83E);
        static public readonly Rune Closed_wah_volume_pedal = new Rune(0xE83F);
        static public readonly Rune Left_hand_tapping = new Rune(0xE840);
        static public readonly Rune Right_hand_tapping = new Rune(0xE841);
        static public readonly Rune Golpe_tapping_the_pick_guard = new Rune(0xE842);
        static public readonly Rune Fade_in = new Rune(0xE843);
        static public readonly Rune Fade_out = new Rune(0xE844);
        static public readonly Rune Volume_swell = new Rune(0xE845);
        static public readonly Rune Strum_direction_up = new Rune(0xE846);
        static public readonly Rune Strum_direction_down = new Rune(0xE847);
        static public readonly Rune Full_barré = new Rune(0xE848);
        static public readonly Rune Half_barré = new Rune(0xE849);
        static public readonly Rune String_number_One0 = new Rune(0xE84A);
        static public readonly Rune String_number_OneOne = new Rune(0xE84B);
        static public readonly Rune String_number_OneTwo = new Rune(0xE84C);
        static public readonly Rune String_number_OneThree = new Rune(0xE84D);
        static public readonly Rune Three_string_fretboard = new Rune(0xE850);
        static public readonly Rune Three_string_fretboard_at_nut = new Rune(0xE851);
        static public readonly Rune Four_string_fretboard = new Rune(0xE852); // (and U+1D11D)
        static public readonly Rune Four_string_fretboard_at_nut = new Rune(0xE853);
        static public readonly Rune Five_string_fretboard = new Rune(0xE854);
        static public readonly Rune Five_string_fretboard_at_nut = new Rune(0xE855);
        static public readonly Rune Six_string_fretboard = new Rune(0xE856); // (and U+1D11C)
        static public readonly Rune Six_string_fretboard_at_nut = new Rune(0xE857);
        static public readonly Rune Fingered_fret_filled_circle = new Rune(0xE858);
        static public readonly Rune String_not_played_X = new Rune(0xE859);
        static public readonly Rune Open_string_O = new Rune(0xE85A);
        static public readonly Rune Hauptstimme = new Rune(0xE860); // (and U+1D1A6)
        static public readonly Rune Nebenstimme = new Rune(0xE861); // (and U+1D1A7)
        static public readonly Rune Start_of_stimme = new Rune(0xE862);
        static public readonly Rune End_of_stimme = new Rune(0xE863); // (and U+1D1A8)
        static public readonly Rune Theme = new Rune(0xE864);
        static public readonly Rune Retrograde_of_theme = new Rune(0xE865);
        static public readonly Rune Retrograde_inversion_of_theme = new Rune(0xE866);
        static public readonly Rune Inversion_of_theme = new Rune(0xE867);
        static public readonly Rune Theme_One = new Rune(0xE868);
        static public readonly Rune Inversion_One = new Rune(0xE869);
        static public readonly Rune Choralmelodie_Berg = new Rune(0xE86A);
        static public readonly Rune Hauptrhythmus_Berg = new Rune(0xE86B);
        static public readonly Rune Diminished = new Rune(0xE870); // (and U+1D1A9)
        static public readonly Rune Half_diminished = new Rune(0xE871);
        static public readonly Rune Augmented = new Rune(0xE872);
        static public readonly Rune Major_seventh = new Rune(0xE873);
        static public readonly Rune Minor = new Rune(0xE874);
        static public readonly Rune Double_height_left_parenthesis = new Rune(0xE875);
        static public readonly Rune Double_height_right_parenthesis = new Rune(0xE876);
        static public readonly Rune Double_height_left_bracket = new Rune(0xE877);
        static public readonly Rune Double_height_right_bracket = new Rune(0xE878);
        static public readonly Rune Triple_height_left_parenthesis = new Rune(0xE879);
        static public readonly Rune Triple_height_right_parenthesis = new Rune(0xE87A);
        static public readonly Rune Slash_for_altered_bass_note = new Rune(0xE87B);
        static public readonly Rune Slash_for_chord_symbols_arranged_diagonally = new Rune(0xE87C);
        static public readonly Rune Tuplet_0 = new Rune(0xE880);
        static public readonly Rune Tuplet_One = new Rune(0xE881);
        static public readonly Rune Tuplet_Two = new Rune(0xE882);
        static public readonly Rune Tuplet_Three = new Rune(0xE883);
        static public readonly Rune Tuplet_Four = new Rune(0xE884);
        static public readonly Rune Tuplet_Five = new Rune(0xE885);
        static public readonly Rune Tuplet_Six = new Rune(0xE886);
        static public readonly Rune Tuplet_Seven = new Rune(0xE887);
        static public readonly Rune Tuplet_Eight = new Rune(0xE888);
        static public readonly Rune Tuplet_Nine = new Rune(0xE889);
        static public readonly Rune Tuplet_colon = new Rune(0xE88A);
        static public readonly Rune Begin_beam = new Rune(0xE8E0); // (and U+1D173)
        static public readonly Rune End_beam = new Rune(0xE8E1); // (and U+1D174)
        static public readonly Rune Begin_tie = new Rune(0xE8E2); // (and U+1D175)
        static public readonly Rune End_tie = new Rune(0xE8E3); // (and U+1D176)
        static public readonly Rune Begin_slur = new Rune(0xE8E4); // (and U+1D177)
        static public readonly Rune End_slur = new Rune(0xE8E5); // (and U+1D178)
        static public readonly Rune Begin_phrase = new Rune(0xE8E6); // (and U+1D179)
        static public readonly Rune End_phrase = new Rune(0xE8E7); // (and U+1D17A)
        static public readonly Rune Figured_bass_0 = new Rune(0xEA50);
        static public readonly Rune Figured_bass_One = new Rune(0xEA51);
        static public readonly Rune Figured_bass_Two = new Rune(0xEA52);
        static public readonly Rune Figured_bass_Two_raised_by_half_step = new Rune(0xEA53);
        static public readonly Rune Figured_bass_Three = new Rune(0xEA54);
        static public readonly Rune Figured_bass_Four = new Rune(0xEA55);
        static public readonly Rune Figured_bass_Four_raised_by_half_step = new Rune(0xEA56);
        static public readonly Rune Figured_bass_Five = new Rune(0xEA57);
        static public readonly Rune Figured_bass_Five_raised_by_half_step = new Rune(0xEA58);
        static public readonly Rune Figured_bass_Five_raised_by_half_step_Two = new Rune(0xEA59);
        static public readonly Rune Figured_bass_diminished_Five = new Rune(0xEA5A);
        static public readonly Rune Figured_bass_Six = new Rune(0xEA5B);
        static public readonly Rune Figured_bass_Six_raised_by_half_step = new Rune(0xEA5C);
        static public readonly Rune Figured_bass_Seven = new Rune(0xEA5D);
        static public readonly Rune Figured_bass_Seven_raised_by_half_step = new Rune(0xEA5E);
        static public readonly Rune Figured_bass_Seven_lowered_by_a_half_step = new Rune(0xEA5F);
        static public readonly Rune Figured_bass_Eight = new Rune(0xEA60);
        static public readonly Rune Figured_bass_Nine = new Rune(0xEA61);
        static public readonly Rune Figured_bass_Nine_raised_by_half_step = new Rune(0xEA62);
        static public readonly Rune Figured_bass_double_flat = new Rune(0xEA63);
        static public readonly Rune Figured_bass_flat = new Rune(0xEA64);
        static public readonly Rune Figured_bass_natural = new Rune(0xEA65);
        static public readonly Rune Figured_bass_sharp = new Rune(0xEA66);
        static public readonly Rune Figured_bass_double_sharp = new Rune(0xEA67);
        static public readonly Rune Figured_bass_ = new Rune(0xEA68);
        //static public readonly Rune Figured_bass_ = new Rune(0xEA69);
        //static public readonly Rune Figured_bass_ = new Rune(0xEA6A);
        //static public readonly Rune Figured_bass_ = new Rune(0xEA6B);
        static public readonly Rune Figured_bass__plus_ = new Rune(0xEA6C);
        static public readonly Rune Combining_raise = new Rune(0xEA6D);
        static public readonly Rune Combining_lower = new Rune(0xEA6E);
        static public readonly Rune Figured_bass_Six_raised_by_half_step_Two = new Rune(0xEA6F);
        static public readonly Rune Function_theory_0 = new Rune(0xEA70);
        static public readonly Rune Function_theory_One = new Rune(0xEA71);
        static public readonly Rune Function_theory_Two = new Rune(0xEA72);
        static public readonly Rune Function_theory_Three = new Rune(0xEA73);
        static public readonly Rune Function_theory_Four = new Rune(0xEA74);
        static public readonly Rune Function_theory_Five = new Rune(0xEA75);
        static public readonly Rune Function_theory_Six = new Rune(0xEA76);
        static public readonly Rune Function_theory_Seven = new Rune(0xEA77);
        static public readonly Rune Function_theory_Eight = new Rune(0xEA78);
        static public readonly Rune Function_theory_Nine = new Rune(0xEA79);
        static public readonly Rune Function_theory_less_than = new Rune(0xEA7A);
        static public readonly Rune Function_theory_minus = new Rune(0xEA7B);
        static public readonly Rune Function_theory_greater_than = new Rune(0xEA7C);
        static public readonly Rune Function_theory_major_subdominant_of_subdominant = new Rune(0xEA7D);
        static public readonly Rune Function_theory_minor_subdominant_of_subdominant = new Rune(0xEA7E);
        static public readonly Rune Function_theory_major_dominant = new Rune(0xEA7F);
        static public readonly Rune Function_theory_minor_dominant = new Rune(0xEA80);
        static public readonly Rune Function_theory_dominant_of_dominant = new Rune(0xEA81);
        static public readonly Rune Function_theory_double_dominant_seventh = new Rune(0xEA82);
        static public readonly Rune Function_theory_G = new Rune(0xEA83);
        static public readonly Rune Function_theory_g = new Rune(0xEA84);
        static public readonly Rune Function_theory_N = new Rune(0xEA85);
        static public readonly Rune Function_theory_n = new Rune(0xEA86);
        static public readonly Rune Function_theory_P = new Rune(0xEA87);
        static public readonly Rune Function_theory_p = new Rune(0xEA88);
        static public readonly Rune Function_theory_major_subdominant = new Rune(0xEA89);
        static public readonly Rune Function_theory_minor_subdominant = new Rune(0xEA8A);
        static public readonly Rune Function_theory_tonic = new Rune(0xEA8B);
        static public readonly Rune Function_theory_minor_tonic = new Rune(0xEA8C);
        static public readonly Rune Function_theory_V = new Rune(0xEA8D);
        static public readonly Rune Function_theory_v = new Rune(0xEA8E);
        static public readonly Rune Function_theory_bracket_left = new Rune(0xEA8F);
        static public readonly Rune Function_theory_bracket_right = new Rune(0xEA90);
        static public readonly Rune Function_theory_parenthesis_left = new Rune(0xEA91);
        static public readonly Rune Function_theory_parenthesis_right = new Rune(0xEA92);
        static public readonly Rune Function_theory_angle_bracket_left = new Rune(0xEA93);
        static public readonly Rune Function_theory_angle_bracket_right = new Rune(0xEA94);
        static public readonly Rune Function_theory_repetition_One = new Rune(0xEA95);
        static public readonly Rune Function_theory_repetition_Two = new Rune(0xEA96);
        static public readonly Rune Function_theory_prefix_ring = new Rune(0xEA97);
        static public readonly Rune Function_theory_prefix_plus = new Rune(0xEA98);
        static public readonly Rune Function_theory_F = new Rune(0xEA99);
        static public readonly Rune Function_theory_I = new Rune(0xEA9A);
        static public readonly Rune Function_theory_i = new Rune(0xEA9B);
        static public readonly Rune Function_theory_K = new Rune(0xEA9C);
        static public readonly Rune Function_theory_k = new Rune(0xEA9D);
        static public readonly Rune Function_theory_L = new Rune(0xEA9E);
        static public readonly Rune Function_theory_l = new Rune(0xEA9F);
        static public readonly Rune Raise_One_staff_position = new Rune(0xEB90);
        static public readonly Rune Raise_Two_staff_positions = new Rune(0xEB91);
        static public readonly Rune Raise_Three_staff_positions = new Rune(0xEB92);
        static public readonly Rune Raise_Four_staff_positions = new Rune(0xEB93);
        static public readonly Rune Raise_Five_staff_positions = new Rune(0xEB94);
        static public readonly Rune Raise_Six_staff_positions = new Rune(0xEB95);
        static public readonly Rune Raise_Seven_staff_positions = new Rune(0xEB96);
        static public readonly Rune Raise_Eight_staff_positions = new Rune(0xEB97);
        static public readonly Rune Lower_One_staff_position = new Rune(0xEB98);
        static public readonly Rune Lower_Two_staff_positions = new Rune(0xEB99);
        static public readonly Rune Lower_Three_staff_positions = new Rune(0xEB9A);
        static public readonly Rune Lower_Four_staff_positions = new Rune(0xEB9B);
        static public readonly Rune Lower_Five_staff_positions = new Rune(0xEB9C);
        static public readonly Rune Lower_Six_staff_positions = new Rune(0xEB9D);
        static public readonly Rune Lower_Seven_staff_positions = new Rune(0xEB9E);
        static public readonly Rune Lower_Eight_staff_positions = new Rune(0xEB9F);
        static public readonly Rune Sharp_stem_up = new Rune(0xEC50);
        static public readonly Rune Sharp_white_stem_up = new Rune(0xEC51);
        //static public readonly Rune Flat = new Rune(0xEC52);
        static public readonly Rune Flat_white = new Rune(0xEC53);
        static public readonly Rune Sharp_history_sign = new Rune(0xEC54);
        static public readonly Rune Double_sharp_history_sign = new Rune(0xEC55);
        static public readonly Rune Flat_history_sign = new Rune(0xEC56);
        static public readonly Rune Double_flat_history_sign = new Rune(0xEC57);
        static public readonly Rune Natural_N = new Rune(0xEC58);
        static public readonly Rune Sharp_stem_down = new Rune(0xEC59);
        static public readonly Rune Sharp_white_stem_down = new Rune(0xEC5A);
        static public readonly Rune Left_bracket_for_whole_time_signature = new Rune(0xEC80);
        static public readonly Rune Right_bracket_for_whole_time_signature = new Rune(0xEC81);
        static public readonly Rune Left_bracket_for_numerator_only = new Rune(0xEC82);
        static public readonly Rune Right_bracket_for_numerator_only = new Rune(0xEC83);
        static public readonly Rune Time_signature_slash_separator = new Rune(0xEC84);
        static public readonly Rune Cut_time_Bach = new Rune(0xEC85);
        static public readonly Rune Cut_triple_time_Nine_Eight = new Rune(0xEC86);
        static public readonly Rune Loco = new Rune(0xEC90);
        static public readonly Rune a_baseline = new Rune(0xEC91);
        static public readonly Rune a_superscript = new Rune(0xEC92);
        static public readonly Rune b_baseline = new Rune(0xEC93);
        static public readonly Rune b_superscript = new Rune(0xEC94);
        static public readonly Rune m_baseline = new Rune(0xEC95);
        static public readonly Rune m_superscript = new Rune(0xEC96);
        static public readonly Rune v_baseline = new Rune(0xEC97);
        static public readonly Rune v_superscript = new Rune(0xEC98);
        static public readonly Rune Figured_bass_Seven_diminished = new Rune(0xECC0);
        static public readonly Rune Figured_bass_triple_flat = new Rune(0xECC1);
        static public readonly Rune Figured_bass_triple_sharp = new Rune(0xECC2);
        static public readonly Rune Round_double_whole_Four_shape_sol__Seven_shape_so = new Rune(0xECD0);
        static public readonly Rune Square_double_whole_Four_shape_la__Aikin_Seven_shape_la = new Rune(0xECD1);
        static public readonly Rune Triangle_right_double_whole_stem_down__Four_shape_fa__Seven_shape_fa = new Rune(0xECD2);
        static public readonly Rune Triangle_left_double_whole_stem_up__Four_shape_fa__Seven_shape_fa = new Rune(0xECD3);
        static public readonly Rune Diamond_double_whole_Four_shape_mi__Seven_shape_mi = new Rune(0xECD4);
        static public readonly Rune Triangle_up_double_whole_Aikin_Seven_shape_do = new Rune(0xECD5);
        static public readonly Rune Moon_double_whole_Aikin_Seven_shape_re = new Rune(0xECD6);
        static public readonly Rune Inverted_keystone_double_whole_Walker_Seven_shape_do = new Rune(0xECD8);
        static public readonly Rune Quarter_moon_double_whole_Walker_Seven_shape_re = new Rune(0xECD9);
        static public readonly Rune Isosceles_triangle_double_whole_Walker_Seven_shape_ti = new Rune(0xECDA);
        static public readonly Rune Moon_left_double_whole_Funk_Seven_shape_do = new Rune(0xECDB);
        static public readonly Rune Arrowhead_left_double_whole_Funk_Seven_shape_re = new Rune(0xECDC);
        static public readonly Rune Triangle_round_left_double_whole_Funk_Seven_shape_ti = new Rune(0xECDD);
        static public readonly Rune Turned_time_signature_0 = new Rune(0xECE0);
        static public readonly Rune Turned_time_signature_One = new Rune(0xECE1);
        static public readonly Rune Turned_time_signature_Two = new Rune(0xECE2);
        static public readonly Rune Turned_time_signature_Three = new Rune(0xECE3);
        static public readonly Rune Turned_time_signature_Four = new Rune(0xECE4);
        static public readonly Rune Turned_time_signature_Five = new Rune(0xECE5);
        static public readonly Rune Turned_time_signature_Six = new Rune(0xECE6);
        static public readonly Rune Turned_time_signature_Seven = new Rune(0xECE7);
        static public readonly Rune Turned_time_signature_Eight = new Rune(0xECE8);
        static public readonly Rune Turned_time_signature_Nine = new Rune(0xECE9);
        static public readonly Rune Turned_common_time = new Rune(0xECEA);
        static public readonly Rune Turned_cut_time = new Rune(0xECEB);
        static public readonly Rune Fingering_0_open_string = new Rune(0xED10);
        static public readonly Rune Fingering_One_thumb = new Rune(0xED11);
        static public readonly Rune Fingering_Two_index_finger = new Rune(0xED12);
        static public readonly Rune Fingering_Three_middle_finger = new Rune(0xED13);
        static public readonly Rune Fingering_Four_ring_finger = new Rune(0xED14);
        static public readonly Rune Fingering_Five_little_finger = new Rune(0xED15);
        static public readonly Rune Fingering_T_left_hand_thumb_for_guitar = new Rune(0xED16);
        static public readonly Rune Fingering_p_pulgar__right_hand_thumb_for_guitar = new Rune(0xED17);
        static public readonly Rune Fingering_t_right_hand_thumb_for_guitar = new Rune(0xED18);
        static public readonly Rune Fingering_i_indicio__right_hand_index_finger_for_guitar = new Rune(0xED19);
        static public readonly Rune Fingering_m_medio__right_hand_middle_finger_for_guitar = new Rune(0xED1A);
        static public readonly Rune Fingering_a_anular__right_hand_ring_finger_for_guitar = new Rune(0xED1B);
        static public readonly Rune Fingering_c_right_hand_little_finger_for_guitar = new Rune(0xED1C);
        static public readonly Rune Fingering_x_right_hand_little_finger_for_guitar = new Rune(0xED1D);
        static public readonly Rune Fingering_e_right_hand_little_finger_for_guitar = new Rune(0xED1E);
        static public readonly Rune Fingering_o_right_hand_little_finger_for_guitar = new Rune(0xED1F);
        static public readonly Rune Finger_substitution_above = new Rune(0xED20);
        static public readonly Rune Finger_substitution_below = new Rune(0xED21);
        static public readonly Rune Finger_substitution_dash = new Rune(0xED22);
        static public readonly Rune Multiple_notes_played_by_thumb_or_single_finger = new Rune(0xED23);
        static public readonly Rune Fingering_Six = new Rune(0xED24);
        static public readonly Rune Fingering_Seven = new Rune(0xED25);
        static public readonly Rune Fingering_Eight = new Rune(0xED26);
        static public readonly Rune Fingering_Nine = new Rune(0xED27);
        static public readonly Rune Fingering_left_parenthesis = new Rune(0xED28);
        static public readonly Rune Fingering_right_parenthesis = new Rune(0xED29);
        static public readonly Rune Fingering_left_bracket = new Rune(0xED2A);
        static public readonly Rune Fingering_right_bracket = new Rune(0xED2B);
        static public readonly Rune Fingering_middle_dot_separator = new Rune(0xED2C);
        static public readonly Rune Fingering_white_middle_dot_separator = new Rune(0xED2D);
        static public readonly Rune Fingering_forward_slash_separator = new Rune(0xED2E);
        //static public readonly Rune Flat = new Rune(0xED60);
        //static public readonly Rune Natural = new Rune(0xED61);
        //static public readonly Rune Sharp = new Rune(0xED62);
        //static public readonly Rune Double_sharp = new Rune(0xED63);
        //static public readonly Rune Double_flat = new Rune(0xED64);
        //static public readonly Rune Triple_sharp = new Rune(0xED65);
        //static public readonly Rune Triple_flat = new Rune(0xED66);
        static public readonly Rune Indian_drum_clef = new Rune(0xED70);
        static public readonly Rune Fingering_0_italic_open_string = new Rune(0xED80);
        static public readonly Rune Fingering_One_italic_thumb = new Rune(0xED81);
        static public readonly Rune Fingering_Two_italic_index_finger = new Rune(0xED82);
        static public readonly Rune Fingering_Three_italic_middle_finger = new Rune(0xED83);
        static public readonly Rune Fingering_Four_italic_ring_finger = new Rune(0xED84);
        static public readonly Rune Fingering_Five_italic_little_finger = new Rune(0xED85);
        static public readonly Rune Fingering_Six_italic = new Rune(0xED86);
        static public readonly Rune Fingering_Seven_italic = new Rune(0xED87);
        static public readonly Rune Fingering_Eight_italic = new Rune(0xED88);
        static public readonly Rune Fingering_Nine_italic = new Rune(0xED89);
        static public readonly Rune Fingering_left_parenthesis_italic = new Rune(0xED8A);
        static public readonly Rune Fingering_right_parenthesis_italic = new Rune(0xED8B);
        static public readonly Rune Fingering_left_bracket_italic = new Rune(0xED8C);
        static public readonly Rune Fingering_right_bracket_italic = new Rune(0xED8D);
        static public readonly Rune Fingering_q_right_hand_little_finger_for_guitar = new Rune(0xED8E);
        static public readonly Rune Fingering_s_right_hand_little_finger_for_guitar = new Rune(0xED8F);
        static public readonly Rune Accidental_up = new Rune(0xEE60);
        static public readonly Rune Accidental_down = new Rune(0xEE61);
        static public readonly Rune Accidental_more = new Rune(0xEE62);
        static public readonly Rune Accidental_less = new Rune(0xEE63);
        static public readonly Rune Quarter_tone_higher_Alois_Hába = new Rune(0xEE64);
        //static public readonly Rune Quarter_tone_higher_Alois_Hába = new Rune(0xEE65);
        static public readonly Rune Three_quarter_tones_higher_Alois_Hába = new Rune(0xEE66);
        static public readonly Rune Quarter_tone_lower_Alois_Hába = new Rune(0xEE67);
        //static public readonly Rune Quarter_tone_lower_Alois_Hába = new Rune(0xEE68);
        static public readonly Rune Three_quarter_tones_lower_Alois_Hába = new Rune(0xEE69);
        static public readonly Rune Swiss_rudiments_flam_black_notehead = new Rune(0xEE70);
        static public readonly Rune Swiss_rudiments_flam_half_minim_notehead = new Rune(0xEE71);
        static public readonly Rune Swiss_rudiments_doublé_black_notehead = new Rune(0xEE72);
        static public readonly Rune Swiss_rudiments_doublé_half_minim_notehead = new Rune(0xEE73);
        static public readonly Rune Sine_notehead_Nancarrow = new Rune(0xEEA0);
        static public readonly Rune Two_Three_note_third_note_series__Cowell = new Rune(0xEEA1);
        static public readonly Rune One_Three_note_third_note_series__Cowell = new Rune(0xEEA2);
        static public readonly Rune One_Six_note_third_note_series__Cowell = new Rune(0xEEA3);
        static public readonly Rune Four_Five_note_fifth_note_series__Cowell = new Rune(0xEEA4);
        static public readonly Rune Two_Five_note_fifth_note_series__Cowell = new Rune(0xEEA5);
        static public readonly Rune One_Five_note_fifth_note_series__Cowell = new Rune(0xEEA6);
        static public readonly Rune Four_Seven_note_seventh_note_series__Cowell = new Rune(0xEEA7);
        static public readonly Rune Two_Seven_note_seventh_note_series__Cowell = new Rune(0xEEA8);
        static public readonly Rune One_Seven_note_seventh_note_series__Cowell = new Rune(0xEEA9);
        static public readonly Rune Eight_Nine_note_ninth_note_series__Cowell = new Rune(0xEEAA);
        static public readonly Rune Four_Nine_note_ninth_note_series__Cowell = new Rune(0xEEAB);
        static public readonly Rune Two_Nine_note_ninth_note_series__Cowell = new Rune(0xEEAC);
        static public readonly Rune Eight_OneOne_note_eleventh_note_series__Cowell = new Rune(0xEEAD);
        static public readonly Rune Four_OneOne_note_eleventh_note_series__Cowell = new Rune(0xEEAE);
        static public readonly Rune Two_OneOne_note_eleventh_note_series__Cowell = new Rune(0xEEAF);
        static public readonly Rune Eight_OneThree_note_thirteenth_note_series__Cowell = new Rune(0xEEB0);
        static public readonly Rune Four_OneThree_note_thirteenth_note_series__Cowell = new Rune(0xEEB1);
        static public readonly Rune Two_OneThree_note_thirteenth_note_series__Cowell = new Rune(0xEEB2);
        static public readonly Rune Eight_OneFive_note_fifteenth_note_series__Cowell = new Rune(0xEEB3);
        static public readonly Rune Four_OneFive_note_fifteenth_note_series__Cowell = new Rune(0xEEB4);
        static public readonly Rune Two_OneFive_note_fifteenth_note_series__Cowell = new Rune(0xEEB5);
        static public readonly Rune Di_whole_note = new Rune(0xEEE0);
        static public readonly Rune Ri_whole_note = new Rune(0xEEE1);
        static public readonly Rune Ra_whole_note = new Rune(0xEEE2);
        static public readonly Rune Me_whole_note = new Rune(0xEEE3);
        static public readonly Rune Fi_whole_note = new Rune(0xEEE4);
        static public readonly Rune Se_whole_note = new Rune(0xEEE5);
        static public readonly Rune Li_whole_note = new Rune(0xEEE6);
        static public readonly Rune Le_whole_note = new Rune(0xEEE7);
        static public readonly Rune Te_whole_note = new Rune(0xEEE8);
        static public readonly Rune Di_half_note = new Rune(0xEEE9);
        static public readonly Rune Ri_half_note = new Rune(0xEEEA);
        static public readonly Rune Ra_half_note = new Rune(0xEEEB);
        static public readonly Rune Me_half_note = new Rune(0xEEEC);
        static public readonly Rune Fi_half_note = new Rune(0xEEED);
        static public readonly Rune Se_half_note = new Rune(0xEEEE);
        static public readonly Rune Li_half_note = new Rune(0xEEEF);
        static public readonly Rune Le_half_note = new Rune(0xEEF0);
        static public readonly Rune Te_half_note = new Rune(0xEEF1);
        static public readonly Rune Di_black_note = new Rune(0xEEF2);
        static public readonly Rune Ri_black_note = new Rune(0xEEF3);
        static public readonly Rune Ra_black_note = new Rune(0xEEF4);
        static public readonly Rune Me_black_note = new Rune(0xEEF5);
        static public readonly Rune Fi_black_note = new Rune(0xEEF6);
        static public readonly Rune Se_black_note = new Rune(0xEEF7);
        static public readonly Rune Li_black_note = new Rune(0xEEF8);
        static public readonly Rune Le_black_note = new Rune(0xEEF9);
        static public readonly Rune Te_black_note = new Rune(0xEEFA);
        static public readonly Rune Scale_degree_One = new Rune(0xEF00);
        static public readonly Rune Scale_degree_Two = new Rune(0xEF01);
        static public readonly Rune Scale_degree_Three = new Rune(0xEF02);
        static public readonly Rune Scale_degree_Four = new Rune(0xEF03);
        static public readonly Rune Scale_degree_Five = new Rune(0xEF04);
        static public readonly Rune Scale_degree_Six = new Rune(0xEF05);
        static public readonly Rune Scale_degree_Seven = new Rune(0xEF06);
        static public readonly Rune Scale_degree_Eight = new Rune(0xEF07);
        static public readonly Rune Scale_degree_Nine = new Rune(0xEF08);

        static Runes()
        {
            _Catalog.Add(Brace);
            _Catalog.Add(Reversed_brace);
            _Catalog.Add(Bracket);
            _Catalog.Add(Bracket_top);
            _Catalog.Add(Bracket_bottom);
            _Catalog.Add(Reversed_bracket_top);
            _Catalog.Add(Reversed_bracket_bottom);
            _Catalog.Add(System_divider);
            _Catalog.Add(Long_system_divider);
            _Catalog.Add(Extra_long_system_divider);
            _Catalog.Add(Split_bar_divider_bar_spans_a_system_break);
            _Catalog.Add(Staff_divide_arrow_down);
            _Catalog.Add(Staff_divide_arrow_up);
            _Catalog.Add(Staff_divide_arrows);
            _Catalog.Add(One_line_staff);
            _Catalog.Add(Two_line_staff);
            _Catalog.Add(Three_line_staff);
            _Catalog.Add(Four_line_staff);
            _Catalog.Add(Five_line_staff);
            _Catalog.Add(Six_line_staff);
            _Catalog.Add(One_line_staff_wide);
            _Catalog.Add(Two_line_staff_wide);
            _Catalog.Add(Three_line_staff_wide);
            _Catalog.Add(Four_line_staff_wide);
            _Catalog.Add(Five_line_staff_wide);
            _Catalog.Add(Six_line_staff_wide);
            _Catalog.Add(One_line_staff_narrow);
            _Catalog.Add(Two_line_staff_narrow);
            _Catalog.Add(Three_line_staff_narrow);
            _Catalog.Add(Four_line_staff_narrow);
            _Catalog.Add(Five_line_staff_narrow);
            _Catalog.Add(Six_line_staff_narrow);
            _Catalog.Add(Leger_line);
            _Catalog.Add(Leger_line_wide);
            _Catalog.Add(Leger_line_narrow);
            _Catalog.Add(Single_barline);
            _Catalog.Add(Double_barline);
            _Catalog.Add(Final_barline);
            _Catalog.Add(Reverse_final_barline);
            _Catalog.Add(Heavy_barline);
            _Catalog.Add(Heavy_double_barline);
            _Catalog.Add(Dashed_barline);
            _Catalog.Add(Dotted_barline);
            _Catalog.Add(Short_barline);
            _Catalog.Add(Tick_barline);
            _Catalog.Add(Left_start_repeat_sign);
            _Catalog.Add(Right_end_repeat_sign);
            _Catalog.Add(Right_and_left_repeat_sign);
            _Catalog.Add(Repeat_dots);
            _Catalog.Add(Single_repeat_dot);
            _Catalog.Add(Dal_segno);
            _Catalog.Add(Da_capo);
            _Catalog.Add(Segno);
            _Catalog.Add(Coda);
            _Catalog.Add(Square_coda);
            _Catalog.Add(Segno_serpent);
            _Catalog.Add(Segno_serpent_with_vertical_lines);
            _Catalog.Add(Left_repeat_sign_within_bar);
            _Catalog.Add(Right_repeat_sign_within_bar);
            _Catalog.Add(G_clef);
            _Catalog.Add(G_clef_quindicesima_bassa);
            _Catalog.Add(G_clef_ottava_bassa);
            _Catalog.Add(G_clef_ottava_alta);
            _Catalog.Add(G_clef_quindicesima_alta);
            _Catalog.Add(G_clef_ottava_bassa_old_style);
            _Catalog.Add(G_clef_ottava_bassa_with_C_clef);
            _Catalog.Add(G_clef__optionally_ottava_bassa);
            _Catalog.Add(Combining_G_clef__number_below);
            _Catalog.Add(Combining_G_clef__number_above);
            _Catalog.Add(G_clef__arrow_up);
            _Catalog.Add(G_clef__arrow_down);
            _Catalog.Add(C_clef);
            _Catalog.Add(C_clef_ottava_bassa);
            _Catalog.Add(C_clef__arrow_up);
            _Catalog.Add(C_clef__arrow_down);
            _Catalog.Add(C_clef_OneNineth_century);
            _Catalog.Add(Combining_C_clef);
            _Catalog.Add(F_clef);
            _Catalog.Add(F_clef_quindicesima_bassa);
            _Catalog.Add(F_clef_ottava_bassa);
            _Catalog.Add(F_clef_ottava_alta);
            _Catalog.Add(F_clef_quindicesima_alta);
            _Catalog.Add(F_clef__arrow_up);
            _Catalog.Add(F_clef__arrow_down);
            _Catalog.Add(Unpitched_percussion_clef_One);
            _Catalog.Add(Unpitched_percussion_clef_Two);
            _Catalog.Add(Semi_pitched_percussion_clef_One);
            _Catalog.Add(Semi_pitched_percussion_clef_Two);
            _Catalog.Add(Six_string_tab_clef);
            _Catalog.Add(Four_string_tab_clef);
            _Catalog.Add(Schäffer_clef);
            _Catalog.Add(Schäffer_previous_clef);
            _Catalog.Add(Schäffer_G_clef_to_F_clef_change);
            _Catalog.Add(Schäffer_F_clef_to_G_clef_change);
            _Catalog.Add(Reversed_G_clef);
            _Catalog.Add(Turned_G_clef);
            _Catalog.Add(Reversed_C_clef);
            _Catalog.Add(Reversed_F_clef);
            _Catalog.Add(Turned_F_clef);
            _Catalog.Add(Bridge_clef);
            _Catalog.Add(Diatonic_accordion_clef);
            _Catalog.Add(G_clef_change);
            _Catalog.Add(C_clef_change);
            _Catalog.Add(F_clef_change);
            _Catalog.Add(Eight_for_clefs);
            _Catalog.Add(OneFive_for_clefs);
            _Catalog.Add(Combining_clef_change);
            _Catalog.Add(Time_signature_0);
            _Catalog.Add(Time_signature_One);
            _Catalog.Add(Time_signature_Two);
            _Catalog.Add(Time_signature_Three);
            _Catalog.Add(Time_signature_Four);
            _Catalog.Add(Time_signature_Five);
            _Catalog.Add(Time_signature_Six);
            _Catalog.Add(Time_signature_Seven);
            _Catalog.Add(Time_signature_Eight);
            _Catalog.Add(Time_signature_Nine);
            _Catalog.Add(Common_time);
            _Catalog.Add(Cut_time);
            _Catalog.Add(Time_signature__plus_);
            _Catalog.Add(Time_signature__plus__for_numerators);
            _Catalog.Add(Time_signature_fraction_slash);
            _Catalog.Add(Time_signature_equals);
            _Catalog.Add(Time_signature_minus);
            _Catalog.Add(Time_signature_multiply);
            _Catalog.Add(Left_parenthesis_for_numerator_only);
            _Catalog.Add(Right_parenthesis_for_numerator_only);
            _Catalog.Add(Left_parenthesis_for_whole_time_signature);
            _Catalog.Add(Right_parenthesis_for_whole_time_signature);
            _Catalog.Add(Time_signature_comma);
            _Catalog.Add(Time_signature_fraction__one_fourth);
            _Catalog.Add(Time_signature_fraction__one_half);
            _Catalog.Add(Time_signature_fraction__three_fourths);
            _Catalog.Add(Time_signature_fraction__one_third);
            _Catalog.Add(Time_signature_fraction_two_thirds);
            _Catalog.Add(Open_time_signature);
            _Catalog.Add(Open_time_signature_Penderecki);
            _Catalog.Add(Control_character_for_numerator_digit);
            _Catalog.Add(Control_character_for_denominator_digit);
            _Catalog.Add(Double_whole_breve_notehead);
            _Catalog.Add(Double_whole_breve_notehead_square);
            _Catalog.Add(Whole_semibreve_notehead);
            _Catalog.Add(Half_minim_notehead);
            _Catalog.Add(Black_notehead);
            _Catalog.Add(Null_notehead);
            _Catalog.Add(X_notehead_double_whole);
            _Catalog.Add(X_notehead_whole);
            _Catalog.Add(X_notehead_half);
            _Catalog.Add(X_notehead_black);
            _Catalog.Add(Ornate_X_notehead);
            _Catalog.Add(Ornate_X_notehead_in_ellipse);
            _Catalog.Add(Plus_notehead_double_whole);
            _Catalog.Add(Plus_notehead_whole);
            _Catalog.Add(Plus_notehead_half);
            _Catalog.Add(Plus_notehead_black);
            _Catalog.Add(Circle_X_double_whole);
            _Catalog.Add(Circle_X_whole);
            _Catalog.Add(Circle_X_half);
            _Catalog.Add(Circle_X_notehead);
            _Catalog.Add(Double_whole_notehead_with_X);
            _Catalog.Add(Whole_notehead_with_X);
            _Catalog.Add(Half_notehead_with_X);
            _Catalog.Add(Void_notehead_with_X);
            _Catalog.Add(Square_notehead_white);
            _Catalog.Add(Square_notehead_black);
            _Catalog.Add(Triangle_notehead_up_double_whole);
            _Catalog.Add(Triangle_notehead_up_whole);
            _Catalog.Add(Triangle_notehead_up_half);
            _Catalog.Add(Triangle_notehead_up_white);
            _Catalog.Add(Triangle_notehead_up_black);
            _Catalog.Add(Triangle_notehead_left_white);
            _Catalog.Add(Triangle_notehead_left_black);
            _Catalog.Add(Triangle_notehead_right_white);
            _Catalog.Add(Triangle_notehead_right_black);
            _Catalog.Add(Triangle_notehead_down_double_whole);
            _Catalog.Add(Triangle_notehead_down_whole);
            _Catalog.Add(Triangle_notehead_down_half);
            _Catalog.Add(Triangle_notehead_down_white);
            _Catalog.Add(Triangle_notehead_down_black);
            _Catalog.Add(Triangle_notehead_up_right_white);
            _Catalog.Add(Triangle_notehead_up_right_black);
            _Catalog.Add(Moon_notehead_white);
            _Catalog.Add(Moon_notehead_black);
            _Catalog.Add(Triangle_round_notehead_down_white);
            _Catalog.Add(Triangle_round_notehead_down_black);
            _Catalog.Add(Parenthesis_notehead);
            _Catalog.Add(Slashed_black_notehead_bottom_left_to_top_right);
            _Catalog.Add(Slashed_black_notehead_top_left_to_bottom_right);
            _Catalog.Add(Slashed_half_notehead_bottom_left_to_top_right);
            _Catalog.Add(Slashed_half_notehead_top_left_to_bottom_right);
            _Catalog.Add(Slashed_whole_notehead_bottom_left_to_top_right);
            _Catalog.Add(Slashed_whole_notehead_top_left_to_bottom_right);
            _Catalog.Add(Slashed_double_whole_notehead_bottom_left_to_top_right);
            _Catalog.Add(Slashed_double_whole_notehead_top_left_to_bottom_right);
            _Catalog.Add(Diamond_double_whole_notehead);
            _Catalog.Add(Diamond_whole_notehead);
            _Catalog.Add(Diamond_half_notehead);
            _Catalog.Add(Diamond_half_notehead_wide);
            _Catalog.Add(Diamond_black_notehead);
            _Catalog.Add(Diamond_black_notehead_wide);
            _Catalog.Add(Diamond_white_notehead);
            _Catalog.Add(Diamond_white_notehead_wide);
            _Catalog.Add(Diamond_double_whole_notehead_old);
            _Catalog.Add(Diamond_whole_notehead_old);
            _Catalog.Add(Diamond_half_notehead_old);
            _Catalog.Add(Diamond_black_notehead_old);
            _Catalog.Add(Half_filled_diamond_notehead);
            _Catalog.Add(Circled_black_notehead);
            _Catalog.Add(Circled_half_notehead);
            _Catalog.Add(Circled_whole_notehead);
            _Catalog.Add(Circled_double_whole_notehead);
            _Catalog.Add(Black_notehead_in_large_circle);
            _Catalog.Add(Half_notehead_in_large_circle);
            _Catalog.Add(Whole_notehead_in_large_circle);
            _Catalog.Add(Double_whole_notehead_in_large_circle);
            _Catalog.Add(Cross_notehead_in_large_circle);
            _Catalog.Add(Large_arrow_up_highest_pitch_double_whole_notehead);
            _Catalog.Add(Large_arrow_up_highest_pitch_whole_notehead);
            _Catalog.Add(Large_arrow_up_highest_pitch_half_notehead);
            _Catalog.Add(Large_arrow_up_highest_pitch_black_notehead);
            _Catalog.Add(Large_arrow_down_lowest_pitch_double_whole_notehead);
            _Catalog.Add(Large_arrow_down_lowest_pitch_whole_notehead);
            _Catalog.Add(Large_arrow_down_lowest_pitch_half_notehead);
            _Catalog.Add(Large_arrow_down_lowest_pitch_black_notehead);
            _Catalog.Add(Opening_parenthesis);
            _Catalog.Add(Closing_parenthesis);
            _Catalog.Add(Circle_slash_notehead);
            _Catalog.Add(Heavy_X_notehead);
            _Catalog.Add(Heavy_X_with_hat_notehead);
            _Catalog.Add(Filled_whole_semibreve_notehead);
            _Catalog.Add(Filled_half_minim_notehead);
            _Catalog.Add(Open_diamond_notehead);
            _Catalog.Add(Slash_with_vertical_ends);
            _Catalog.Add(Slash_with_horizontal_ends);
            _Catalog.Add(White_slash_whole);
            _Catalog.Add(White_slash_half);
            _Catalog.Add(Large_white_diamond);
            _Catalog.Add(Small_slash_with_vertical_ends);
            _Catalog.Add(Large_X_notehead);
            _Catalog.Add(Muted_slash_with_vertical_ends);
            _Catalog.Add(Muted_slash_with_horizontal_ends);
            _Catalog.Add(Muted_white_slash);
            _Catalog.Add(White_slash_double_whole);
            _Catalog.Add(Large_round_black_notehead);
            _Catalog.Add(Large_round_white_notehead);
            _Catalog.Add(Large_round_white_notehead_with_dot);
            _Catalog.Add(Round_black_notehead);
            _Catalog.Add(Round_white_notehead);
            _Catalog.Add(Round_white_notehead_with_dot);
            _Catalog.Add(Large_round_black_notehead__slashed);
            _Catalog.Add(Large_round_white_notehead__slashed);
            _Catalog.Add(Round_black_notehead__slashed);
            _Catalog.Add(Round_white_notehead__slashed);
            _Catalog.Add(Large_square_black_notehead);
            _Catalog.Add(Large_square_white_notehead);
            _Catalog.Add(Round_black_notehead__double_slashed);
            _Catalog.Add(Round_white_notehead__double_slashed);
            _Catalog.Add(Cluster_notehead_white_square);
            _Catalog.Add(Cluster_notehead_black_square);
            _Catalog.Add(Cluster_notehead_white_round);
            _Catalog.Add(Cluster_notehead_black_round);
            _Catalog.Add(Double_whole_note_cluster__Twond);
            _Catalog.Add(Whole_note_cluster__Twond);
            _Catalog.Add(Half_note_cluster__Twond);
            _Catalog.Add(Quarter_note_cluster__Twond);
            _Catalog.Add(Double_whole_note_cluster__Threerd);
            _Catalog.Add(Whole_note_cluster__Threerd);
            _Catalog.Add(Half_note_cluster__Threerd);
            _Catalog.Add(Quarter_note_cluster__Threerd);
            _Catalog.Add(Combining_double_whole_note_cluster__top);
            _Catalog.Add(Combining_double_whole_note_cluster__middle);
            _Catalog.Add(Combining_double_whole_note_cluster__bottom);
            _Catalog.Add(Combining_whole_note_cluster__top);
            _Catalog.Add(Combining_whole_note_cluster__middle);
            _Catalog.Add(Combining_whole_note_cluster__bottom);
            _Catalog.Add(Combining_half_note_cluster__top);
            _Catalog.Add(Combining_half_note_cluster__middle);
            _Catalog.Add(Combining_half_note_cluster__bottom);
            _Catalog.Add(Combining_quarter_note_cluster__top);
            _Catalog.Add(Combining_quarter_note_cluster__middle);
            _Catalog.Add(Combining_quarter_note_cluster__bottom);
            _Catalog.Add(White_diamond_cluster__Twond);
            _Catalog.Add(Black_diamond_cluster__Twond);
            _Catalog.Add(White_diamond_cluster__Threerd);
            _Catalog.Add(Black_diamond_cluster__Threerd);
            _Catalog.Add(Combining_white_diamond_cluster__top);
            _Catalog.Add(Combining_white_diamond_cluster__middle);
            _Catalog.Add(Combining_white_diamond_cluster__bottom);
            _Catalog.Add(Combining_black_diamond_cluster__top);
            _Catalog.Add(Combining_black_diamond_cluster__middle);
            _Catalog.Add(Combining_black_diamond_cluster__bottom);
            _Catalog.Add(Combining_black_rectangular_cluster__top);
            _Catalog.Add(Combining_black_rectangular_cluster__middle);
            _Catalog.Add(Combining_black_rectangular_cluster__bottom);
            _Catalog.Add(Combining_white_rectangular_cluster__top);
            _Catalog.Add(Combining_white_rectangular_cluster__middle);
            _Catalog.Add(Combining_white_rectangular_cluster__bottom);
            _Catalog.Add(Do_whole_note);
            _Catalog.Add(Re_whole_note);
            _Catalog.Add(Mi_whole_note);
            _Catalog.Add(Fa_whole_note);
            _Catalog.Add(So_whole_note);
            _Catalog.Add(La_whole_note);
            _Catalog.Add(Ti_whole_note);
            _Catalog.Add(Si_whole_note);
            _Catalog.Add(Do_half_note);
            _Catalog.Add(Re_half_note);
            _Catalog.Add(Mi_half_note);
            _Catalog.Add(Fa_half_note);
            _Catalog.Add(So_half_note);
            _Catalog.Add(La_half_note);
            _Catalog.Add(Ti_half_note);
            _Catalog.Add(Si_half_note);
            _Catalog.Add(Do_black_note);
            _Catalog.Add(Re_black_note);
            _Catalog.Add(Mi_black_note);
            _Catalog.Add(Fa_black_note);
            _Catalog.Add(So_black_note);
            _Catalog.Add(La_black_note);
            _Catalog.Add(Ti_black_note);
            _Catalog.Add(Si_black_note);
            _Catalog.Add(A_flat_whole_note);
            _Catalog.Add(A_whole_note);
            _Catalog.Add(A_sharp_whole_note);
            _Catalog.Add(B_flat_whole_note);
            _Catalog.Add(B_whole_note);
            _Catalog.Add(B_sharp_whole_note);
            _Catalog.Add(C_flat_whole_note);
            _Catalog.Add(C_whole_note);
            _Catalog.Add(C_sharp_whole_note);
            _Catalog.Add(D_flat_whole_note);
            _Catalog.Add(D_whole_note);
            _Catalog.Add(D_sharp_whole_note);
            _Catalog.Add(E_flat_whole_note);
            _Catalog.Add(E_whole_note);
            _Catalog.Add(E_sharp_whole_note);
            _Catalog.Add(F_flat_whole_note);
            _Catalog.Add(F_whole_note);
            _Catalog.Add(F_sharp_whole_note);
            _Catalog.Add(G_flat_whole_note);
            _Catalog.Add(G_whole_note);
            _Catalog.Add(G_sharp_whole_note);
            _Catalog.Add(H_whole_note);
            _Catalog.Add(H_sharp_whole_note);
            _Catalog.Add(A_flat_half_note);
            _Catalog.Add(A_half_note);
            _Catalog.Add(A_sharp_half_note);
            _Catalog.Add(B_flat_half_note);
            _Catalog.Add(B_half_note);
            _Catalog.Add(B_sharp_half_note);
            _Catalog.Add(C_flat_half_note);
            _Catalog.Add(C_half_note);
            _Catalog.Add(C_sharp_half_note);
            _Catalog.Add(D_flat_half_note);
            _Catalog.Add(D_half_note);
            _Catalog.Add(D_sharp_half_note);
            _Catalog.Add(E_flat_half_note);
            _Catalog.Add(E_half_note);
            _Catalog.Add(E_sharp_half_note);
            _Catalog.Add(F_flat_half_note);
            _Catalog.Add(F_half_note);
            _Catalog.Add(F_sharp_half_note);
            _Catalog.Add(G_flat_half_note);
            _Catalog.Add(G_half_note);
            _Catalog.Add(G_sharp_half_note);
            _Catalog.Add(H_half_note);
            _Catalog.Add(H_sharp_half_note);
            _Catalog.Add(A_flat_black_note);
            _Catalog.Add(A_black_note);
            _Catalog.Add(A_sharp_black_note);
            _Catalog.Add(B_flat_black_note);
            _Catalog.Add(B_black_note);
            _Catalog.Add(B_sharp_black_note);
            _Catalog.Add(C_flat_black_note);
            _Catalog.Add(C_black_note);
            _Catalog.Add(C_sharp_black_note);
            _Catalog.Add(D_flat_black_note);
            _Catalog.Add(D_black_note);
            _Catalog.Add(D_sharp_black_note);
            _Catalog.Add(E_flat_black_note);
            _Catalog.Add(E_black_note);
            _Catalog.Add(E_sharp_black_note);
            _Catalog.Add(F_flat_black_note);
            _Catalog.Add(F_black_note);
            _Catalog.Add(F_sharp_black_note);
            _Catalog.Add(G_flat_black_note);
            _Catalog.Add(G_black_note);
            _Catalog.Add(G_sharp_black_note);
            _Catalog.Add(H_black_note);
            _Catalog.Add(H_sharp_black_note);
            _Catalog.Add(Empty_whole_note);
            _Catalog.Add(Empty_half_note);
            _Catalog.Add(Empty_black_note);
            _Catalog.Add(Round_white_Four_shape_sol__Seven_shape_so);
            _Catalog.Add(Round_black_Four_shape_sol__Seven_shape_so);
            _Catalog.Add(Square_white_Four_shape_la__Aikin_Seven_shape_la);
            _Catalog.Add(Square_black_Four_shape_la__Aikin_Seven_shape_la);
            _Catalog.Add(Triangle_right_white_stem_down__Four_shape_fa__Seven_shape_fa);
            _Catalog.Add(Triangle_right_black_stem_down__Four_shape_fa__Seven_shape_fa);
            _Catalog.Add(Triangle_left_white_stem_up__Four_shape_fa__Seven_shape_fa);
            _Catalog.Add(Triangle_left_black_stem_up__Four_shape_fa__Seven_shape_fa);
            _Catalog.Add(Diamond_white_Four_shape_mi__Seven_shape_mi);
            _Catalog.Add(Diamond_black_Four_shape_mi__Seven_shape_mi);
            _Catalog.Add(Triangle_up_white_Aikin_Seven_shape_do);
            _Catalog.Add(Triangle_up_black_Aikin_Seven_shape_do);
            _Catalog.Add(Moon_white_Aikin_Seven_shape_re);
            _Catalog.Add(Moon_black_Aikin_Seven_shape_re);
            _Catalog.Add(Triangle_round_white_Aikin_Seven_shape_ti);
            _Catalog.Add(Triangle_round_black_Aikin_Seven_shape_ti);
            _Catalog.Add(Inverted_keystone_white_Walker_Seven_shape_do);
            _Catalog.Add(Inverted_keystone_black_Walker_Seven_shape_do);
            _Catalog.Add(Quarter_moon_white_Walker_Seven_shape_re);
            _Catalog.Add(Quarter_moon_black_Walker_Seven_shape_re);
            _Catalog.Add(Isosceles_triangle_white_Walker_Seven_shape_ti);
            _Catalog.Add(Isosceles_triangle_black_Walker_Seven_shape_ti);
            _Catalog.Add(Moon_left_white_Funk_Seven_shape_do);
            _Catalog.Add(Moon_left_black_Funk_Seven_shape_do);
            _Catalog.Add(Arrowhead_left_white_Funk_Seven_shape_re);
            _Catalog.Add(Arrowhead_left_black_Funk_Seven_shape_re);
            _Catalog.Add(Triangle_round_left_white_Funk_Seven_shape_ti);
            _Catalog.Add(Triangle_round_left_black_Funk_Seven_shape_ti);
            _Catalog.Add(Double_whole_note_breve);
            _Catalog.Add(Double_whole_note_square);
            _Catalog.Add(Whole_note_semibreve);
            _Catalog.Add(Half_note_minim_stem_up);
            _Catalog.Add(Half_note_minim_stem_down);
            _Catalog.Add(Quarter_note_crotchet_stem_up);
            _Catalog.Add(Quarter_note_crotchet_stem_down);
            _Catalog.Add(Eighth_note_quaver_stem_up);
            _Catalog.Add(Eighth_note_quaver_stem_down);
            _Catalog.Add(OneSixth_note_semiquaver_stem_up);
            _Catalog.Add(OneSixth_note_semiquaver_stem_down);
            _Catalog.Add(ThreeTwond_note_demisemiquaver_stem_up);
            _Catalog.Add(ThreeTwond_note_demisemiquaver_stem_down);
            _Catalog.Add(SixFourth_note_hemidemisemiquaver_stem_up);
            _Catalog.Add(SixFourth_note_hemidemisemiquaver_stem_down);
            _Catalog.Add(OneTwoEightth_note_semihemidemisemiquaver_stem_up);
            _Catalog.Add(OneTwoEightth_note_semihemidemisemiquaver_stem_down);
            _Catalog.Add(TwoFiveSixth_note_demisemihemidemisemiquaver_stem_up);
            _Catalog.Add(TwoFiveSixth_note_demisemihemidemisemiquaver_stem_down);
            _Catalog.Add(FiveOneTwoth_note_hemidemisemihemidemisemiquaver_stem_up);
            _Catalog.Add(FiveOneTwoth_note_hemidemisemihemidemisemiquaver_stem_down);
            _Catalog.Add(One0TwoFourth_note_semihemidemisemihemidemisemiquaver_stem_up);
            _Catalog.Add(One0TwoFourth_note_semihemidemisemihemidemisemiquaver_stem_down);
            _Catalog.Add(Augmentation_dot);
            _Catalog.Add(Black_note__short_stem);
            _Catalog.Add(Black_note__long_stem);
            _Catalog.Add(Black_note__fractional_Eightth_beam__short_stem);
            _Catalog.Add(Black_note__fractional_Eightth_beam__long_stem);
            _Catalog.Add(Black_note__fractional_OneSixth_beam__short_stem);
            _Catalog.Add(Black_note__fractional_OneSixth_beam__long_stem);
            _Catalog.Add(Black_note__fractional_ThreeTwond_beam__long_stem);
            _Catalog.Add(Continuing_Eightth_beam_for_short_stem);
            _Catalog.Add(Continuing_Eightth_beam_for_long_stem);
            _Catalog.Add(Continuing_OneSixth_beam_for_short_stem);
            _Catalog.Add(Continuing_OneSixth_beam_for_long_stem);
            _Catalog.Add(Continuing_ThreeTwond_beam_for_long_stem);
            _Catalog.Add(Tie);
            _Catalog.Add(Tuplet_bracket_start_for_short_stem);
            _Catalog.Add(Tuplet_number_Three_for_short_stem);
            _Catalog.Add(Tuplet_bracket_end_for_short_stem);
            _Catalog.Add(Tuplet_bracket_start_for_long_stem);
            _Catalog.Add(Tuplet_number_Three_for_long_stem);
            _Catalog.Add(Tuplet_bracket_end_for_long_stem);
            _Catalog.Add(Headless_black_note__short_stem);
            _Catalog.Add(Headless_black_note__long_stem);
            _Catalog.Add(Headless_black_note__fractional_Eightth_beam__short_stem);
            _Catalog.Add(Headless_black_note__fractional_Eightth_beam__long_stem);
            _Catalog.Add(Headless_black_note__fractional_OneSixth_beam__short_stem);
            _Catalog.Add(Headless_black_note__fractional_OneSixth_beam__long_stem);
            _Catalog.Add(Headless_black_note__fractional_ThreeTwond_beam__long_stem);
            _Catalog.Add(Combining_stem);
            _Catalog.Add(Combining_sprechgesang_stem);
            _Catalog.Add(Combining_swished_stem);
            _Catalog.Add(Combining_Penderecki_unmeasured_tremolo_stem);
            _Catalog.Add(Combining_sul_ponticello_bow_behind_bridge_stem);
            _Catalog.Add(Combining_bow_on_bridge_stem);
            _Catalog.Add(Combining_bow_on_tailpiece_stem);
            _Catalog.Add(Combining_buzz_roll_stem);
            _Catalog.Add(Combining_damp_stem);
            _Catalog.Add(Combining_vibrato_pulse_accent_Saunders_stem);
            _Catalog.Add(Combining_multiphonics_black_stem);
            _Catalog.Add(Combining_multiphonics_white_stem);
            _Catalog.Add(Combining_multiphonics_black_and_white_stem);
            _Catalog.Add(Combining_sussurando_stem);
            _Catalog.Add(Combining_rim_shot_stem);
            _Catalog.Add(Combining_harp_string_noise_stem);
            _Catalog.Add(Combining_flag_One_Eightth_above);
            _Catalog.Add(Combining_flag_One_Eightth_below);
            _Catalog.Add(Combining_flag_Two_OneSixth_above);
            _Catalog.Add(Combining_flag_Two_OneSixth_below);
            _Catalog.Add(Combining_flag_Three_ThreeTwond_above);
            _Catalog.Add(Combining_flag_Three_ThreeTwond_below);
            _Catalog.Add(Combining_flag_Four_SixFourth_above);
            _Catalog.Add(Combining_flag_Four_SixFourth_below);
            _Catalog.Add(Combining_flag_Five_OneTwoEightth_above);
            _Catalog.Add(Combining_flag_Five_OneTwoEightth_below);
            _Catalog.Add(Combining_flag_Six_TwoFiveSixth_above);
            _Catalog.Add(Combining_flag_Six_TwoFiveSixth_below);
            _Catalog.Add(Combining_flag_Seven_FiveOneTwoth_above);
            _Catalog.Add(Combining_flag_Seven_FiveOneTwoth_below);
            _Catalog.Add(Combining_flag_Eight_One0TwoFourth_above);
            _Catalog.Add(Combining_flag_Eight_One0TwoFourth_below);
            _Catalog.Add(Internal_combining_flag_above);
            _Catalog.Add(Internal_combining_flag_below);
            _Catalog.Add(Flat);
            _Catalog.Add(Natural);
            _Catalog.Add(Sharp);
            _Catalog.Add(Double_sharp);
            _Catalog.Add(Double_flat);
            _Catalog.Add(Triple_sharp);
            _Catalog.Add(Triple_flat);
            _Catalog.Add(Natural_flat);
            _Catalog.Add(Natural_sharp);
            _Catalog.Add(Sharp_sharp);
            _Catalog.Add(Accidental_parenthesis__left);
            _Catalog.Add(Accidental_parenthesis__right);
            _Catalog.Add(Accidental_bracket__left);
            _Catalog.Add(Accidental_bracket__right);
            _Catalog.Add(Accent_above);
            _Catalog.Add(Accent_below);
            _Catalog.Add(Staccato_above);
            _Catalog.Add(Staccato_below);
            _Catalog.Add(Tenuto_above);
            _Catalog.Add(Tenuto_below);
            _Catalog.Add(Staccatissimo_above);
            _Catalog.Add(Staccatissimo_below);
            _Catalog.Add(Staccatissimo_wedge_above);
            _Catalog.Add(Staccatissimo_wedge_below);
            _Catalog.Add(Staccatissimo_stroke_above);
            _Catalog.Add(Staccatissimo_stroke_below);
            _Catalog.Add(Marcato_above);
            _Catalog.Add(Marcato_below);
            _Catalog.Add(Marcato_staccato_above);
            _Catalog.Add(Marcato_staccato_below);
            _Catalog.Add(Accent_staccato_above);
            _Catalog.Add(Accent_staccato_below);
            _Catalog.Add(Louré_tenuto_staccato_above);
            _Catalog.Add(Louré_tenuto_staccato_below);
            _Catalog.Add(Tenuto_accent_above);
            _Catalog.Add(Tenuto_accent_below);
            _Catalog.Add(Stress_above);
            _Catalog.Add(Stress_below);
            _Catalog.Add(Unstress_above);
            _Catalog.Add(Unstress_below);
            _Catalog.Add(Laissez_vibrer_lv_above);
            _Catalog.Add(Laissez_vibrer_lv_below);
            _Catalog.Add(Marcato_tenuto_above);
            _Catalog.Add(Marcato_tenuto_below);
            _Catalog.Add(Fermata_above);
            _Catalog.Add(Fermata_below);
            _Catalog.Add(Very_short_fermata_above);
            _Catalog.Add(Very_short_fermata_below);
            _Catalog.Add(Short_fermata_above);
            _Catalog.Add(Short_fermata_below);
            _Catalog.Add(Long_fermata_above);
            _Catalog.Add(Long_fermata_below);
            _Catalog.Add(Very_long_fermata_above);
            _Catalog.Add(Very_long_fermata_below);
            _Catalog.Add(Long_fermata_Henze_above);
            _Catalog.Add(Long_fermata_Henze_below);
            _Catalog.Add(Short_fermata_Henze_above);
            _Catalog.Add(Short_fermata_Henze_below);
            _Catalog.Add(Breath_mark_comma);
            _Catalog.Add(Breath_mark_tick_like);
            _Catalog.Add(Breath_mark_upbow_like);
            _Catalog.Add(Caesura);
            _Catalog.Add(Thick_caesura);
            _Catalog.Add(Short_caesura);
            _Catalog.Add(Curved_caesura);
            _Catalog.Add(Breath_mark_Salzedo);
            _Catalog.Add(Curlew_Britten);
            _Catalog.Add(Single_stroke_caesura);
            _Catalog.Add(Maxima_rest);
            _Catalog.Add(Longa_rest);
            _Catalog.Add(Double_whole_breve_rest);
            _Catalog.Add(Whole_semibreve_rest);
            _Catalog.Add(Half_minim_rest);
            _Catalog.Add(Quarter_crotchet_rest);
            _Catalog.Add(Eighth_quaver_rest);
            _Catalog.Add(OneSixth_semiquaver_rest);
            _Catalog.Add(ThreeTwond_demisemiquaver_rest);
            _Catalog.Add(SixFourth_hemidemisemiquaver_rest);
            _Catalog.Add(OneTwoEightth_semihemidemisemiquaver_rest);
            _Catalog.Add(TwoFiveSixth_rest);
            _Catalog.Add(FiveOneTwoth_rest);
            _Catalog.Add(One0TwoFourth_rest);
            _Catalog.Add(Multiple_measure_rest);
            _Catalog.Add(H_bar__left_half);
            _Catalog.Add(H_bar__middle);
            _Catalog.Add(H_bar__right_half);
            _Catalog.Add(Old_style_quarter_crotchet_rest);
            _Catalog.Add(Double_whole_rest_on_leger_lines);
            _Catalog.Add(Whole_rest_on_leger_line);
            _Catalog.Add(Half_rest_on_leger_line);
            _Catalog.Add(Z_style_quarter_crotchet_rest);
            _Catalog.Add(Repeat_last_bar);
            _Catalog.Add(Repeat_last_two_bars);
            _Catalog.Add(Repeat_last_four_bars);
            _Catalog.Add(Repeat_bar_upper_dot);
            _Catalog.Add(Repeat_bar_slash);
            _Catalog.Add(Repeat_bar_lower_dot);
            _Catalog.Add(Ottava);
            _Catalog.Add(Ottava_alta);
            _Catalog.Add(Ottava_bassa);
            _Catalog.Add(Ottava_bassa_ba);
            _Catalog.Add(Quindicesima);
            _Catalog.Add(Quindicesima_alta);
            _Catalog.Add(Quindicesima_bassa);
            _Catalog.Add(Ventiduesima);
            _Catalog.Add(Ventiduesima_alta);
            _Catalog.Add(Ventiduesima_bassa);
            _Catalog.Add(Left_parenthesis_for_octave_signs);
            _Catalog.Add(Right_parenthesis_for_octave_signs);
            _Catalog.Add(Ottava_bassa_Eightvb);
            _Catalog.Add(Quindicesima_bassa_mb);
            _Catalog.Add(Ventiduesima_bassa_mb);
            _Catalog.Add(Bassa);
            _Catalog.Add(Piano);
            _Catalog.Add(Mezzo);
            _Catalog.Add(Forte);
            _Catalog.Add(Rinforzando);
            _Catalog.Add(Sforzando);
            _Catalog.Add(Z);
            _Catalog.Add(Niente);
            _Catalog.Add(pppppp);
            _Catalog.Add(ppppp);
            _Catalog.Add(pppp);
            _Catalog.Add(ppp);
            _Catalog.Add(pp);
            _Catalog.Add(mp);
            _Catalog.Add(mf);
            _Catalog.Add(pf);
            _Catalog.Add(ff);
            _Catalog.Add(fff);
            _Catalog.Add(ffff);
            _Catalog.Add(fffff);
            _Catalog.Add(ffffff);
            _Catalog.Add(Forte_piano);
            _Catalog.Add(Forzando);
            _Catalog.Add(Sforzando_One);
            _Catalog.Add(Sforzando_piano);
            _Catalog.Add(Sforzando_pianissimo);
            _Catalog.Add(Sforzato);
            _Catalog.Add(Sforzato_piano);
            _Catalog.Add(Sforzatissimo);
            _Catalog.Add(Rinforzando_One);
            _Catalog.Add(Rinforzando_Two);
            _Catalog.Add(Crescendo);
            _Catalog.Add(Diminuendo);
            _Catalog.Add(Messa_di_voce);
            _Catalog.Add(Niente_for_hairpins);
            _Catalog.Add(Left_parenthesis_for_hairpins);
            _Catalog.Add(Right_parenthesis_for_hairpins);
            _Catalog.Add(Left_bracket_for_hairpins);
            _Catalog.Add(Right_bracket_for_hairpins);
            _Catalog.Add(Colon_separator_for_combined_dynamics);
            _Catalog.Add(Hyphen_separator_for_combined_dynamics);
            _Catalog.Add(Space_separator_for_combined_dynamics);
            _Catalog.Add(Slash_separator_for_combined_dynamics);
            _Catalog.Add(Narrow_elision);
            _Catalog.Add(Elision);
            _Catalog.Add(Wide_elision);
            _Catalog.Add(Baseline_hyphen);
            _Catalog.Add(Non_breaking_baseline_hyphen);
            _Catalog.Add(Text_repeats);
            _Catalog.Add(Slashed_grace_note_stem_up);
            _Catalog.Add(Slashed_grace_note_stem_down);
            _Catalog.Add(Grace_note_stem_up);
            _Catalog.Add(Grace_note_stem_down);
            _Catalog.Add(Slash_for_stem_up_grace_note);
            _Catalog.Add(Slash_for_stem_down_grace_note);
            _Catalog.Add(Trill);
            _Catalog.Add(Turn);
            _Catalog.Add(Inverted_turn);
            _Catalog.Add(Turn_with_slash);
            _Catalog.Add(Turn_up);
            _Catalog.Add(Inverted_turn_up);
            _Catalog.Add(Short_trill);
            _Catalog.Add(Mordent);
            _Catalog.Add(Tremblement);
            _Catalog.Add(Haydn_ornament);
            _Catalog.Add(Guitar_vibrato_bar_scoop);
            _Catalog.Add(Guitar_vibrato_bar_dip);
            _Catalog.Add(Guitar_shake);
            _Catalog.Add(String_number_0);
            _Catalog.Add(String_number_One);
            _Catalog.Add(String_number_Two);
            _Catalog.Add(String_number_Three);
            _Catalog.Add(String_number_Four);
            _Catalog.Add(String_number_Five);
            _Catalog.Add(String_number_Six);
            _Catalog.Add(String_number_Seven);
            _Catalog.Add(String_number_Eight);
            _Catalog.Add(String_number_Nine);
            _Catalog.Add(Open_wah_volume_pedal);
            _Catalog.Add(Half_open_wah_volume_pedal);
            _Catalog.Add(Closed_wah_volume_pedal);
            _Catalog.Add(Left_hand_tapping);
            _Catalog.Add(Right_hand_tapping);
            _Catalog.Add(Golpe_tapping_the_pick_guard);
            _Catalog.Add(Fade_in);
            _Catalog.Add(Fade_out);
            _Catalog.Add(Volume_swell);
            _Catalog.Add(Strum_direction_up);
            _Catalog.Add(Strum_direction_down);
            _Catalog.Add(Full_barré);
            _Catalog.Add(Half_barré);
            _Catalog.Add(String_number_One0);
            _Catalog.Add(String_number_OneOne);
            _Catalog.Add(String_number_OneTwo);
            _Catalog.Add(String_number_OneThree);
            _Catalog.Add(Three_string_fretboard);
            _Catalog.Add(Three_string_fretboard_at_nut);
            _Catalog.Add(Four_string_fretboard);
            _Catalog.Add(Four_string_fretboard_at_nut);
            _Catalog.Add(Five_string_fretboard);
            _Catalog.Add(Five_string_fretboard_at_nut);
            _Catalog.Add(Six_string_fretboard);
            _Catalog.Add(Six_string_fretboard_at_nut);
            _Catalog.Add(Fingered_fret_filled_circle);
            _Catalog.Add(String_not_played_X);
            _Catalog.Add(Open_string_O);
            _Catalog.Add(Hauptstimme);
            _Catalog.Add(Nebenstimme);
            _Catalog.Add(Start_of_stimme);
            _Catalog.Add(End_of_stimme);
            _Catalog.Add(Theme);
            _Catalog.Add(Retrograde_of_theme);
            _Catalog.Add(Retrograde_inversion_of_theme);
            _Catalog.Add(Inversion_of_theme);
            _Catalog.Add(Theme_One);
            _Catalog.Add(Inversion_One);
            _Catalog.Add(Choralmelodie_Berg);
            _Catalog.Add(Hauptrhythmus_Berg);
            _Catalog.Add(Diminished);
            _Catalog.Add(Half_diminished);
            _Catalog.Add(Augmented);
            _Catalog.Add(Major_seventh);
            _Catalog.Add(Minor);
            _Catalog.Add(Double_height_left_parenthesis);
            _Catalog.Add(Double_height_right_parenthesis);
            _Catalog.Add(Double_height_left_bracket);
            _Catalog.Add(Double_height_right_bracket);
            _Catalog.Add(Triple_height_left_parenthesis);
            _Catalog.Add(Triple_height_right_parenthesis);
            _Catalog.Add(Slash_for_altered_bass_note);
            _Catalog.Add(Slash_for_chord_symbols_arranged_diagonally);
            _Catalog.Add(Tuplet_0);
            _Catalog.Add(Tuplet_One);
            _Catalog.Add(Tuplet_Two);
            _Catalog.Add(Tuplet_Three);
            _Catalog.Add(Tuplet_Four);
            _Catalog.Add(Tuplet_Five);
            _Catalog.Add(Tuplet_Six);
            _Catalog.Add(Tuplet_Seven);
            _Catalog.Add(Tuplet_Eight);
            _Catalog.Add(Tuplet_Nine);
            _Catalog.Add(Tuplet_colon);
            _Catalog.Add(Begin_beam);
            _Catalog.Add(End_beam);
            _Catalog.Add(Begin_tie);
            _Catalog.Add(End_tie);
            _Catalog.Add(Begin_slur);
            _Catalog.Add(End_slur);
            _Catalog.Add(Begin_phrase);
            _Catalog.Add(End_phrase);
            _Catalog.Add(Figured_bass_0);
            _Catalog.Add(Figured_bass_One);
            _Catalog.Add(Figured_bass_Two);
            _Catalog.Add(Figured_bass_Two_raised_by_half_step);
            _Catalog.Add(Figured_bass_Three);
            _Catalog.Add(Figured_bass_Four);
            _Catalog.Add(Figured_bass_Four_raised_by_half_step);
            _Catalog.Add(Figured_bass_Five);
            _Catalog.Add(Figured_bass_Five_raised_by_half_step);
            _Catalog.Add(Figured_bass_Five_raised_by_half_step_Two);
            _Catalog.Add(Figured_bass_diminished_Five);
            _Catalog.Add(Figured_bass_Six);
            _Catalog.Add(Figured_bass_Six_raised_by_half_step);
            _Catalog.Add(Figured_bass_Seven);
            _Catalog.Add(Figured_bass_Seven_raised_by_half_step);
            _Catalog.Add(Figured_bass_Seven_lowered_by_a_half_step);
            _Catalog.Add(Figured_bass_Eight);
            _Catalog.Add(Figured_bass_Nine);
            _Catalog.Add(Figured_bass_Nine_raised_by_half_step);
            _Catalog.Add(Figured_bass_double_flat);
            _Catalog.Add(Figured_bass_flat);
            _Catalog.Add(Figured_bass_natural);
            _Catalog.Add(Figured_bass_sharp);
            _Catalog.Add(Figured_bass_double_sharp);
            _Catalog.Add(Figured_bass_);
            _Catalog.Add(Figured_bass__plus_);
            _Catalog.Add(Combining_raise);
            _Catalog.Add(Combining_lower);
            _Catalog.Add(Figured_bass_Six_raised_by_half_step_Two);
            _Catalog.Add(Function_theory_0);
            _Catalog.Add(Function_theory_One);
            _Catalog.Add(Function_theory_Two);
            _Catalog.Add(Function_theory_Three);
            _Catalog.Add(Function_theory_Four);
            _Catalog.Add(Function_theory_Five);
            _Catalog.Add(Function_theory_Six);
            _Catalog.Add(Function_theory_Seven);
            _Catalog.Add(Function_theory_Eight);
            _Catalog.Add(Function_theory_Nine);
            _Catalog.Add(Function_theory_less_than);
            _Catalog.Add(Function_theory_minus);
            _Catalog.Add(Function_theory_greater_than);
            _Catalog.Add(Function_theory_major_subdominant_of_subdominant);
            _Catalog.Add(Function_theory_minor_subdominant_of_subdominant);
            _Catalog.Add(Function_theory_major_dominant);
            _Catalog.Add(Function_theory_minor_dominant);
            _Catalog.Add(Function_theory_dominant_of_dominant);
            _Catalog.Add(Function_theory_double_dominant_seventh);
            _Catalog.Add(Function_theory_G);
            _Catalog.Add(Function_theory_g);
            _Catalog.Add(Function_theory_N);
            _Catalog.Add(Function_theory_n);
            _Catalog.Add(Function_theory_P);
            _Catalog.Add(Function_theory_p);
            _Catalog.Add(Function_theory_major_subdominant);
            _Catalog.Add(Function_theory_minor_subdominant);
            _Catalog.Add(Function_theory_tonic);
            _Catalog.Add(Function_theory_minor_tonic);
            _Catalog.Add(Function_theory_V);
            _Catalog.Add(Function_theory_v);
            _Catalog.Add(Function_theory_bracket_left);
            _Catalog.Add(Function_theory_bracket_right);
            _Catalog.Add(Function_theory_parenthesis_left);
            _Catalog.Add(Function_theory_parenthesis_right);
            _Catalog.Add(Function_theory_angle_bracket_left);
            _Catalog.Add(Function_theory_angle_bracket_right);
            _Catalog.Add(Function_theory_repetition_One);
            _Catalog.Add(Function_theory_repetition_Two);
            _Catalog.Add(Function_theory_prefix_ring);
            _Catalog.Add(Function_theory_prefix_plus);
            _Catalog.Add(Function_theory_F);
            _Catalog.Add(Function_theory_I);
            _Catalog.Add(Function_theory_i);
            _Catalog.Add(Function_theory_K);
            _Catalog.Add(Function_theory_k);
            _Catalog.Add(Function_theory_L);
            _Catalog.Add(Function_theory_l);
            _Catalog.Add(Raise_One_staff_position);
            _Catalog.Add(Raise_Two_staff_positions);
            _Catalog.Add(Raise_Three_staff_positions);
            _Catalog.Add(Raise_Four_staff_positions);
            _Catalog.Add(Raise_Five_staff_positions);
            _Catalog.Add(Raise_Six_staff_positions);
            _Catalog.Add(Raise_Seven_staff_positions);
            _Catalog.Add(Raise_Eight_staff_positions);
            _Catalog.Add(Lower_One_staff_position);
            _Catalog.Add(Lower_Two_staff_positions);
            _Catalog.Add(Lower_Three_staff_positions);
            _Catalog.Add(Lower_Four_staff_positions);
            _Catalog.Add(Lower_Five_staff_positions);
            _Catalog.Add(Lower_Six_staff_positions);
            _Catalog.Add(Lower_Seven_staff_positions);
            _Catalog.Add(Lower_Eight_staff_positions);
            _Catalog.Add(Sharp_stem_up);
            _Catalog.Add(Sharp_white_stem_up);
            _Catalog.Add(Flat_white);
            _Catalog.Add(Sharp_history_sign);
            _Catalog.Add(Double_sharp_history_sign);
            _Catalog.Add(Flat_history_sign);
            _Catalog.Add(Double_flat_history_sign);
            _Catalog.Add(Natural_N);
            _Catalog.Add(Sharp_stem_down);
            _Catalog.Add(Sharp_white_stem_down);
            _Catalog.Add(Left_bracket_for_whole_time_signature);
            _Catalog.Add(Right_bracket_for_whole_time_signature);
            _Catalog.Add(Left_bracket_for_numerator_only);
            _Catalog.Add(Right_bracket_for_numerator_only);
            _Catalog.Add(Time_signature_slash_separator);
            _Catalog.Add(Cut_time_Bach);
            _Catalog.Add(Cut_triple_time_Nine_Eight);
            _Catalog.Add(Loco);
            _Catalog.Add(a_baseline);
            _Catalog.Add(a_superscript);
            _Catalog.Add(b_baseline);
            _Catalog.Add(b_superscript);
            _Catalog.Add(m_baseline);
            _Catalog.Add(m_superscript);
            _Catalog.Add(v_baseline);
            _Catalog.Add(v_superscript);
            _Catalog.Add(Figured_bass_Seven_diminished);
            _Catalog.Add(Figured_bass_triple_flat);
            _Catalog.Add(Figured_bass_triple_sharp);
            _Catalog.Add(Round_double_whole_Four_shape_sol__Seven_shape_so);
            _Catalog.Add(Square_double_whole_Four_shape_la__Aikin_Seven_shape_la);
            _Catalog.Add(Triangle_right_double_whole_stem_down__Four_shape_fa__Seven_shape_fa);
            _Catalog.Add(Triangle_left_double_whole_stem_up__Four_shape_fa__Seven_shape_fa);
            _Catalog.Add(Diamond_double_whole_Four_shape_mi__Seven_shape_mi);
            _Catalog.Add(Triangle_up_double_whole_Aikin_Seven_shape_do);
            _Catalog.Add(Moon_double_whole_Aikin_Seven_shape_re);
            _Catalog.Add(Inverted_keystone_double_whole_Walker_Seven_shape_do);
            _Catalog.Add(Quarter_moon_double_whole_Walker_Seven_shape_re);
            _Catalog.Add(Isosceles_triangle_double_whole_Walker_Seven_shape_ti);
            _Catalog.Add(Moon_left_double_whole_Funk_Seven_shape_do);
            _Catalog.Add(Arrowhead_left_double_whole_Funk_Seven_shape_re);
            _Catalog.Add(Triangle_round_left_double_whole_Funk_Seven_shape_ti);
            _Catalog.Add(Turned_time_signature_0);
            _Catalog.Add(Turned_time_signature_One);
            _Catalog.Add(Turned_time_signature_Two);
            _Catalog.Add(Turned_time_signature_Three);
            _Catalog.Add(Turned_time_signature_Four);
            _Catalog.Add(Turned_time_signature_Five);
            _Catalog.Add(Turned_time_signature_Six);
            _Catalog.Add(Turned_time_signature_Seven);
            _Catalog.Add(Turned_time_signature_Eight);
            _Catalog.Add(Turned_time_signature_Nine);
            _Catalog.Add(Turned_common_time);
            _Catalog.Add(Turned_cut_time);
            _Catalog.Add(Fingering_0_open_string);
            _Catalog.Add(Fingering_One_thumb);
            _Catalog.Add(Fingering_Two_index_finger);
            _Catalog.Add(Fingering_Three_middle_finger);
            _Catalog.Add(Fingering_Four_ring_finger);
            _Catalog.Add(Fingering_Five_little_finger);
            _Catalog.Add(Fingering_T_left_hand_thumb_for_guitar);
            _Catalog.Add(Fingering_p_pulgar__right_hand_thumb_for_guitar);
            _Catalog.Add(Fingering_t_right_hand_thumb_for_guitar);
            _Catalog.Add(Fingering_i_indicio__right_hand_index_finger_for_guitar);
            _Catalog.Add(Fingering_m_medio__right_hand_middle_finger_for_guitar);
            _Catalog.Add(Fingering_a_anular__right_hand_ring_finger_for_guitar);
            _Catalog.Add(Fingering_c_right_hand_little_finger_for_guitar);
            _Catalog.Add(Fingering_x_right_hand_little_finger_for_guitar);
            _Catalog.Add(Fingering_e_right_hand_little_finger_for_guitar);
            _Catalog.Add(Fingering_o_right_hand_little_finger_for_guitar);
            _Catalog.Add(Finger_substitution_above);
            _Catalog.Add(Finger_substitution_below);
            _Catalog.Add(Finger_substitution_dash);
            _Catalog.Add(Multiple_notes_played_by_thumb_or_single_finger);
            _Catalog.Add(Fingering_Six);
            _Catalog.Add(Fingering_Seven);
            _Catalog.Add(Fingering_Eight);
            _Catalog.Add(Fingering_Nine);
            _Catalog.Add(Fingering_left_parenthesis);
            _Catalog.Add(Fingering_right_parenthesis);
            _Catalog.Add(Fingering_left_bracket);
            _Catalog.Add(Fingering_right_bracket);
            _Catalog.Add(Fingering_middle_dot_separator);
            _Catalog.Add(Fingering_white_middle_dot_separator);
            _Catalog.Add(Fingering_forward_slash_separator);
            _Catalog.Add(Indian_drum_clef);
            _Catalog.Add(Fingering_0_italic_open_string);
            _Catalog.Add(Fingering_One_italic_thumb);
            _Catalog.Add(Fingering_Two_italic_index_finger);
            _Catalog.Add(Fingering_Three_italic_middle_finger);
            _Catalog.Add(Fingering_Four_italic_ring_finger);
            _Catalog.Add(Fingering_Five_italic_little_finger);
            _Catalog.Add(Fingering_Six_italic);
            _Catalog.Add(Fingering_Seven_italic);
            _Catalog.Add(Fingering_Eight_italic);
            _Catalog.Add(Fingering_Nine_italic);
            _Catalog.Add(Fingering_left_parenthesis_italic);
            _Catalog.Add(Fingering_right_parenthesis_italic);
            _Catalog.Add(Fingering_left_bracket_italic);
            _Catalog.Add(Fingering_right_bracket_italic);
            _Catalog.Add(Fingering_q_right_hand_little_finger_for_guitar);
            _Catalog.Add(Fingering_s_right_hand_little_finger_for_guitar);
            _Catalog.Add(Accidental_up);
            _Catalog.Add(Accidental_down);
            _Catalog.Add(Accidental_more);
            _Catalog.Add(Accidental_less);
            _Catalog.Add(Quarter_tone_higher_Alois_Hába);
            _Catalog.Add(Three_quarter_tones_higher_Alois_Hába);
            _Catalog.Add(Quarter_tone_lower_Alois_Hába);
            _Catalog.Add(Three_quarter_tones_lower_Alois_Hába);
            _Catalog.Add(Swiss_rudiments_flam_black_notehead);
            _Catalog.Add(Swiss_rudiments_flam_half_minim_notehead);
            _Catalog.Add(Swiss_rudiments_doublé_black_notehead);
            _Catalog.Add(Swiss_rudiments_doublé_half_minim_notehead);
            _Catalog.Add(Sine_notehead_Nancarrow);
            _Catalog.Add(Two_Three_note_third_note_series__Cowell);
            _Catalog.Add(One_Three_note_third_note_series__Cowell);
            _Catalog.Add(One_Six_note_third_note_series__Cowell);
            _Catalog.Add(Four_Five_note_fifth_note_series__Cowell);
            _Catalog.Add(Two_Five_note_fifth_note_series__Cowell);
            _Catalog.Add(One_Five_note_fifth_note_series__Cowell);
            _Catalog.Add(Four_Seven_note_seventh_note_series__Cowell);
            _Catalog.Add(Two_Seven_note_seventh_note_series__Cowell);
            _Catalog.Add(One_Seven_note_seventh_note_series__Cowell);
            _Catalog.Add(Eight_Nine_note_ninth_note_series__Cowell);
            _Catalog.Add(Four_Nine_note_ninth_note_series__Cowell);
            _Catalog.Add(Two_Nine_note_ninth_note_series__Cowell);
            _Catalog.Add(Eight_OneOne_note_eleventh_note_series__Cowell);
            _Catalog.Add(Four_OneOne_note_eleventh_note_series__Cowell);
            _Catalog.Add(Two_OneOne_note_eleventh_note_series__Cowell);
            _Catalog.Add(Eight_OneThree_note_thirteenth_note_series__Cowell);
            _Catalog.Add(Four_OneThree_note_thirteenth_note_series__Cowell);
            _Catalog.Add(Two_OneThree_note_thirteenth_note_series__Cowell);
            _Catalog.Add(Eight_OneFive_note_fifteenth_note_series__Cowell);
            _Catalog.Add(Four_OneFive_note_fifteenth_note_series__Cowell);
            _Catalog.Add(Two_OneFive_note_fifteenth_note_series__Cowell);
            _Catalog.Add(Di_whole_note);
            _Catalog.Add(Ri_whole_note);
            _Catalog.Add(Ra_whole_note);
            _Catalog.Add(Me_whole_note);
            _Catalog.Add(Fi_whole_note);
            _Catalog.Add(Se_whole_note);
            _Catalog.Add(Li_whole_note);
            _Catalog.Add(Le_whole_note);
            _Catalog.Add(Te_whole_note);
            _Catalog.Add(Di_half_note);
            _Catalog.Add(Ri_half_note);
            _Catalog.Add(Ra_half_note);
            _Catalog.Add(Me_half_note);
            _Catalog.Add(Fi_half_note);
            _Catalog.Add(Se_half_note);
            _Catalog.Add(Li_half_note);
            _Catalog.Add(Le_half_note);
            _Catalog.Add(Te_half_note);
            _Catalog.Add(Di_black_note);
            _Catalog.Add(Ri_black_note);
            _Catalog.Add(Ra_black_note);
            _Catalog.Add(Me_black_note);
            _Catalog.Add(Fi_black_note);
            _Catalog.Add(Se_black_note);
            _Catalog.Add(Li_black_note);
            _Catalog.Add(Le_black_note);
            _Catalog.Add(Te_black_note);
            _Catalog.Add(Scale_degree_One);
            _Catalog.Add(Scale_degree_Two);
            _Catalog.Add(Scale_degree_Three);
            _Catalog.Add(Scale_degree_Four);
            _Catalog.Add(Scale_degree_Five);
            _Catalog.Add(Scale_degree_Six);
            _Catalog.Add(Scale_degree_Seven);
            _Catalog.Add(Scale_degree_Eight);
            _Catalog.Add(Scale_degree_Nine);
        }

    }//class
}//ns
