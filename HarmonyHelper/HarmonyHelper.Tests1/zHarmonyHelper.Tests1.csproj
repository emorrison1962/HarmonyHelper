<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <OutputType>Library</OutputType>
    <RootNamespace>HarmonyHelper.Tests1</RootNamespace>
    <AssemblyName>HarmonyHelper.Tests1</AssemblyName>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Pex.Framework, Version=17.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\HarmonyHelper\HarmonyHelper.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="NoteNameTest.CatalogGetTest.g.cs" />
    <Compile Remove="NoteNameTest.CompareTest.g.cs" />
    <Compile Remove="NoteNameTest.CopyTest01.g.cs" />
    <Compile Remove="NoteNameTest.GetEnharmonicEquivalentsTest.g.cs" />
    <Compile Remove="NoteNameTest.IsValidTranspositionTest.g.cs" />
    <Compile Remove="NoteNameTest.MaxValueGetTest.g.cs" />
    <Compile Remove="NoteNameTest.MinValueGetTest.g.cs" />
    <Compile Remove="NoteNameTest.op_AdditionTest.g.cs" />
    <Compile Remove="NoteNameTest.op_EqualityTest.g.cs" />
    <Compile Remove="NoteNameTest.op_ExplicitTest.g.cs" />
    <Compile Remove="NoteNameTest.op_GreaterThanOrEqualTest.g.cs" />
    <Compile Remove="NoteNameTest.op_GreaterThanTest.g.cs" />
    <Compile Remove="NoteNameTest.op_ImplicitTest.g.cs" />
    <Compile Remove="NoteNameTest.op_InequalityTest.g.cs" />
    <Compile Remove="NoteNameTest.op_LessThanOrEqualTest.g.cs" />
    <Compile Remove="NoteNameTest.op_LessThanTest.g.cs" />
    <Compile Remove="NoteNameTest.op_SubtractionTest.g.cs" />
    <Compile Remove="NoteNameTest.op_SubtractionTest01.g.cs" />
    <Compile Remove="NoteNameTest.ResolveIntervalTest.g.cs" />
    <Compile Remove="NoteNameTest.ResolveNoteNameTest.g.cs" />
    <Compile Remove="NoteNameTest.TryTransposeUpTest.g.cs" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers" Version="0.4.410601">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>
</Project>